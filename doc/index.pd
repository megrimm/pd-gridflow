#N canvas 0 0 632 659 10;
#X obj 0 0 doc_demo;
#X obj 3 32 doc_section General Topics;
#X obj 108 64 doc_link about 1;
#X text 180 64 about GridFlow (credits \,  etc);
#X obj 108 96 doc_link intro 1;
#X text 180 96 the main goal of this library (but not the only one);
#X obj 114 128 doc_link attr 1;
#X text 180 128 attributes \,  the 'get' method \,  etc;
#X obj 102 160 doc_link canvas 1;
#X text 180 160 methods added by GridFlow to pd's canvas class accessible through \[namecanvas\]);
#X obj 114 192 doc_link grid 1;
#X text 180 192 what is a grid ?;
#X obj 108 224 doc_link image 1;
#X text 180 224 an image of pixels is just one way to use a grid;
#X obj 90 256 doc_link indexmap 1;
#X text 180 256 goes with \[#store\];
#X obj 102 288 doc_link numop1 1;
#X text 180 288 a numop1 is a transformation made on one number (usually);
#X obj 102 320 doc_link numop2 1;
#X text 180 320 a numop2 represents a way of combining two numbers (usually);
#X obj 96 352 doc_link numtype 1;
#X text 180 352 numtypes allow you to balance precision \,  range \,  headroom and efficiency ("speed");
#X obj 114 384 doc_link hpgl 1;
#X text 180 384 about <hpgl> inlets and outlets;
#X obj 3 436 doc_section Object Classes;
#X obj 138 468 #;
#X text 180 468 plain numeric operators on grids: + - * / etc;
#X obj -6 500 #apply_colormap_channelwise;
#X text 180 500 apply color correction tables separately on each channel;
#X obj 54 532 #background_model;
#X text 180 532 make mask from learning to distinguish background from foreground;
#X obj 114 564 #border;
#X text 180 564 add padding on sides of a grid;
#X obj 114 596 #camera;
#X text 180 596 control panel for opening cameras;
#X obj 126 628 #cast;
#X text 180 628 convert grid from one number type to another;
#X obj 102 660 #centroid;
#X text 180 660 find centroid (weighted average) of the coordinates of a grid;
#X obj 114 692 #change;
#X text 180 692 send grid only if different from previous grid;
#X obj 102 724 #checkers;
#X text 180 724 make image of chequered background in two tones of grey;
#X obj 126 756 #clip;
#X text 180 756 min and max;
#X obj 72 788 #cluster_avg 4;
#X text 180 788 computes several averages at once according to a table of indices;
#X obj 4 820 #color;
#X text 180 820 GUI for selecting a colour;
#X obj 102 891 #compress;
#X text 180 891 pick a set of values in a grid;
#X obj 102 923 #contrast;
#X text 180 923 adjust contrast in two different ways;
#X obj 102 955 #convolve;
#X text 180 955 compute convolution product of a grid (blur and edge-detection);
#X obj 84 987 #delay_image;
#X text 180 987 delay line for images that are all of the same size;
#X obj 132 1019 #dim;
#X text 180 1019 get the size (dimensions) of a grid;
#X obj 78 1051 #downscale_by;
#X text 180 1051 reduce the size of an image by a whole factor;
#X obj 96 1083 #draw_hpgl;
#X text 180 1083 plot lines given in HPGL format \,  using [#draw_polygon];
#X obj 90 1115 #draw_image;
#X text 180 1115 picture-in-picture;
#X obj 78 1147 #draw_lattice;
#X text 180 1147 draw horizontal and vertical lines to cover an image;
#X obj 84 1179 #draw_points;
#X text 180 1179 (future use);
#X obj 78 1211 #draw_polygon;
#X text 180 1211 draw polygon in an image;
#X obj 96 1243 #draw_rect;
#X text 180 1243 draw a rectangle in an image;
#X obj 84 1275 #draw_slider;
#X text 180 1275 draw a slider in an image;
#X obj 126 1307 #expr;
#X text 180 1307 an [expr] clone that will eventually support grids too;
#X obj 54 1339 #extract_diagonal;
#X text 180 1339 extract the main diagonal from a matrix;
#X obj 126 1371 #fade;
#X text 180 1371 fade in exponential-decay fashion (linear recurrence);
#X obj 102 1403 #fade_lin;
#X text 180 1403 fade in piecewise-linear fashion;
#X obj 102 1435 #fastblur;
#X text 180 1435 speedy shortcut for rectangular blur;
#X obj 132 1467 #fft;
#X text 180 1467 compute forward or inverse one-or-two-dimensional complex FFT of a grid;
#X obj 102 1499 #finished;
#X text 180 1499 bang when grid transmission has ended;
#X obj 114 1531 #fold +;
#X text 180 1531 compute the sum of each row \,  product of each row \,  and other similar operations;
#X obj 108 1563 #for 0 4;
#X text 180 1563 make a grid from all numbers or coordinates in a certain range;
#X obj 102 1595 #from_pdp;
#X text 180 1595 convert pdp image/*/* to grid;
#X obj 102 1627 #from_pix;
#X text 180 1627 convert pix (GEM) to grid;
#X obj 120 1659 #from~;
#X text 180 1659 turn several signals into a sequence of multichannel grids;
#X obj 120 1691 #gamma;
#X text 180 1691 apply gamma correction;
#X obj 120 1723 #grade;
#X text 180 1723 make an index of the sorting of a grid;
#X obj 54 1755 #greyscale_to_rgb;
#X text 180 1755 convert greyscale to RGB;
#X obj 120 1787 #hello;
#X text 180 1787 make 7 colour bars;
#X obj 102 1819 #hueshift;
#X text 180 1819 apply hue shift by rotating the color wheel;
#X obj 114 1851 #import;
#X text 180 1851 convert float \,  list \,  or symbol ASCII codes \,  to a grid;
#X obj 138 1883 #in;
#X text 180 1883 open file or device for reading or download;
#X obj 120 1915 #inner;
#X text 180 1915 scalar ("dot") product \,  matrix product \,  tensor contraction \,  image channel remapping \,  etc.;
#X obj 132 1947 #in~;
#X text 180 1947 open file or device for reading or download \,  with sound (experimental);
#X obj 84 1979 doc_link #io.aalib;
#X text 180 1979 open an aalib window;
#X obj 78 2011 doc_link #io.dc1394;
#X text 180 2011 open a faiawaia "DC" camera (not DV) using a Linux-compatible OS;
#X obj 90 2043 doc_link #io.grid;
#X text 180 2043 read or write a .grid file (GridFlow storage format);
#X obj 90 2075 doc_link #io.jpeg;
#X text 180 2075 read or write a .jpeg file;
#X obj 90 2107 doc_link #io.mpeg;
#X text 180 2107 read a .mpeg video file;
#X obj 96 2139 doc_link #io.png;
#X text 180 2139 read a .png image file;
#X obj 96 2171 doc_link #io.ppm;
#X text 180 2171 read a .pbm or .pgm or .ppm image file or write a .ppm image file;
#X obj 78 2203 doc_link #io.quartz;
#X text 180 2203 open a Quartz window (OSX);
#X obj 30 2235 doc_link #io.quicktimeapple;
#X text 180 2235 read a .mov video file (OSX);
#X obj 24 2267 doc_link #io.quicktimecamera;
#X text 180 2267 open a QuickTime Sequence Grabber (Camera / Video input) device;
#X obj 48 2299 doc_link #io.quicktimehw;
#X text 180 2299 read a .mov or .avi video file (Linux);
#X obj 96 2331 doc_link #io.sdl;
#X text 180 2331 open a SDL window (Windows \, Linux \, OSX);
#X obj 66 2363 doc_link #io.videodev;
#X text 180 2363 open a V4L1 device (Linux-only interface for video cameras and video digitisers);
#X obj 96 2395 doc_link #io.x11;
#X text 180 2395 open a X11 window (Linux \, etc);
#X obj 126 2427 #join;
#X text 180 2427 join two grids together along any dimension;
#X obj 96 2459 #labelling;
#X text 180 2459 tag connected pixels with region numbers in a two-tone single-channel image;
#X obj 120 2491 #layer;
#X text 180 2491 layer two same-sized images;
#X obj 60 2523 #line_to_polygon;
#X text 180 2523 convert line (as point pair) to polygon (rotated rectangle);
#X obj 96 2555 #lop_space;
#X text 180 2555 fade in spatially (up \,  down \,  left \,  right \,  etc) by IIR filtering;
#X obj 90 2587 #make_arrow;
#X text 180 2587 make an arrow "polygon" from 2 points (for use with line mode of [#draw_polygon]);
#X obj 90 2619 #make_cross;
#X text 180 2619 make cross-shaped polygon;
#X obj 107 2651 #many tgl 3 3;
#X text 180 2651 [#many]: create and organise many identical GUI objects;
#X obj 96 2720 #many-prop;
#X text 180 2720 properties dialogue for [#many];
#X obj 108 2752 #memstat;
#X text 180 2752 get stats about RAM (*experimental*);
#X obj 114 2784 #moment;
#X text 180 2784 find 1st or 2nd order moment (weighted average or variance) of the coordinates of a grid;
#X obj 78 2816 #moment_polar;
#X text 180 2816 convert covariance matrix to the longest and shortest radius of an ellipse and a rotation angle;
#X obj 54 2848 #motion_detection;
#X text 180 2848 frame difference with some options;
#X obj 120 2880 #mouse;
#X text 180 2880 converts mouse events to reports of clicks \,  drags \,  unclicks \,  motions \,  and separate buttons and wheel;
#X obj 60 2912 #noise_gate_yuvs;
#X text 180 2912 replaces dark pixels by black pixels in signed YUV images;
#X obj 132 2944 #out;
#X text 180 2944 open file or device for writing or upload;
#X obj 108 2976 #outer +;
#X text 180 2976 apply numeric operator on all possible combinations of elements of one grid with elements of another;
#X obj 126 3008 #pack;
#X text 180 3008 combine floats on separate inlets to make a grid;
#X obj 84 3040 #perspective;
#X text 180 3040 divide each point by its depth;
#X obj 78 3072 #polygon_area;
#X text 180 3072 find area of a polygon in square pixels;
#X obj 42 3104 #polygon_comparator;
#X text 180 3104 find similarity between two polygons independently of rotation \,  by radial maps and FFT;
#X obj 48 3136 #polygon_each_edge;
#X text 180 3136 convert a polygon to a sequence of overlapping 2-sided polygons representing edges;
#X obj 66 3168 #polygon_moment;
#X text 180 3168 find average of all points inside of a polygon;
#X obj 48 3200 #polygon_perimetre;
#X text 180 3200 find perimetre of a polygon in pixels (euclidian);
#X obj 42 3232 #polygon_radial_map;
#X text 180 3232 find radius of a polygon from a given origin \,  sampled at equally spaced angles;
#X obj 96 3264 #posterize;
#X text 180 3264 quantise pixel values;
#X obj 120 3296 #print;
#X text 180 3296 print to console;
#X obj 120 3328 #ravel;
#X text 180 3328 do #redim so that a grid keeps same number of elements but just one dimension;
#X obj 114 3360 #record;
#X text 180 3360 wrapper around [#in quicktime];
#X obj 120 3392 #redim;
#X text 180 3392 change the size of a grid by restreaming contents into a new shape;
#X obj 90 3424 #reinterval;
#X text 180 3424 change the scale of values from one interval to another;
#X obj 84 3456 #remap_image;
#X text 180 3456 apply object chain on pixel positions to make new image from chosen pixels of the input image;
#X obj 108 3488 #reverse;
#X text 180 3488 mirror image of a grid along a dimension;
#X obj 54 3520 #rgb_to_greyscale;
#X text 180 3520 convert RGB to greyscale;
#X obj 84 3552 #rgb_to_rgba;
#X text 180 3552 convert RGB to RGBA (but setting alpha to 0);
#X obj 90 3584 #rgb_to_yuv;
#X text 180 3584 convert RGB to unsigned YUV;
#X obj 84 3616 #rgba_to_rgb;
#X text 180 3616 convert RGBA to RGB;
#X obj 114 3648 #rotate;
#X text 180 3648 rotate points through two axes (or rotate pixels as points in a colorspace);
#X obj 72 3680 #rotatificator;
#X text 180 3680 make rotation matrix for any two dimensions chosen from a space of any number of dimensions;
#X obj 90 3712 #saturation;
#X text 180 3712 multiply chroma by some value;
#X obj 102 3744 #scale_by;
#X text 180 3744 reduce the size of an image by a whole factor;
#X obj 102 3776 #scale_to;
#X text 180 3776 scale an image from one size to any other size by deleting or duplicating rows and columns;
#X obj 114 3808 #scan +;
#X text 180 3808 compute the cumulative sums of each row \,  and other similar operations;
#X obj 91 3840 #see;
#X text 180 3840 [#see]: view video output within patch and collect mouse/key info;
#X obj 102 3912 #seq_fold;
#X text 180 3912 cascade the use of an object on all elements of an incoming grid message sequence;
#X obj 120 3944 #slice;
#X text 180 3944 crop an image using a start point (top left) and end point (bottom right);
#X obj 102 3976 #solarize;
#X text 180 3976 like pingpong but on all pixel values of a grid;
#X obj 126 4008 #sort;
#X text 180 4008 sort each row of a grid;
#X obj 114 4040 #spread;
#X text 180 4040 add noise to each vector (point or pixel);
#X obj 108 4072 #sprintf;
#X text 180 4072 a version of gf/sprintf that directly produces a grid;
#X obj 120 4104 #store;
#X text 180 4104 store image in RAM \,  in-place picture-in-picture \,  and make lookups in various ways;
#X obj 126 4136 #swap;
#X text 180 4136 like [swap] for grids;
#X obj 138 4168 #t;
#X text 180 4168 like [t a a] for grids;
#X obj 108 4200 #tabread;
#X text 180 4200 for doing many tabreads at once \,  from a grid to a grid;
#X obj 102 4232 #tabwrite;
#X text 180 4232 for doing many tabwrites at once \,  from two grids;
#X obj 72 4264 #text_to_image;
#X text 180 4264 use a fixed-width font grid to make a tiling of characters as specified by a text string;
#X obj 102 4296 #to_float;
#X text 180 4296 convert grid to sequence of floats;
#X obj 114 4328 #to_iem;
#X text 180 4328 convert grid(3) to IEMGUI colour code;
#X obj 108 4360 #to_list;
#X text 180 4360 convert grid to list;
#X obj 90 4392 #to_literal;
#X text 180 4392 convert grid to grid-literal (list with a # sign);
#X obj 114 4424 #to_pdp;
#X text 180 4424 convert grid to pdp image/*/*;
#X obj 114 4456 #to_pix;
#X text 180 4456 convert grid to pix (GEM);
#X obj 96 4488 #to_symbol;
#X text 180 4488 convert grid of ASCII codes to symbol;
#X obj 132 4520 #to~;
#X text 180 4520 convert grid to signal;
#X obj 96 4552 #transpose;
#X text 180 4552 swap two dimensions out of any \,  in a grid;
#X obj 126 4584 #type;
#X text 180 4584 get a symbol representing the number type of a grid;
#X obj 96 4616 #type-gui;
#X text 180 4616 [#type-gui]: a hradio or vradio for selecting a type for use by 'cast' methods;
#X obj 114 4712 #unpack;
#X text 180 4712 split a grid into floats on separate outlets;
#X obj 114 4744 #window;
#X text 180 4744 a [#out window] that can be toggled to appear and disappear;
#X obj 90 4776 #yuv_to_rgb;
#X text 180 4776 convert unsigned YUV to RGB;
#X obj 132 4808 args;
#X text 180 4808 pick up the arguments of an abstraction instance \,  including nested lists and init-messages;
#X obj 126 4840 ascii;
#X text 180 4840 write integer as decimal in ascii codes;
#X obj 96 4872 ascii_to_f;
#X text 180 4872 converts a list of ascii codes to a float;
#X obj 132 4904 attr;
#X text 180 4904 dictionary to be used for storing attributes of abstractions \,  among other things;
#X obj 84 4936 azerty_piano;
#X text 180 4936 imitation of [notein] using [key] and [keyup] (for AZERTY keyboards);
#X obj 84 4968 class_exists;
#X text 180 4968 figure out whether a class has been loaded by pd;
#X obj 114 5000 cv/#Add;
#X text 180 5000 OpenCV addition;
#X obj 114 5032 cv/#And;
#X text 180 5032 OpenCV bitwise AND;
#X obj 72 5064 cv/#ApproxPoly;
#X text 180 5064 OpenCV polygon approximator;
#X obj 60 5096 cv/#CornerHarris;
#X text 180 5096 OpenCV Harris corner-detector;
#X obj 114 5128 cv/#Div;
#X text 180 5128 OpenCV division;
#X obj 90 5160 cv/#Ellipse;
#X text 180 5160 OpenCV draw ellipse;
#X obj 30 5192 cv/#HaarDetectObjects;
#X text 180 5192 OpenCV (future use);
#X obj 96 5224 cv/#Invert;
#X text 180 5224 OpenCV invert matrix;
#X obj 84 5256 cv/#KMeans 4;
#X text 180 5256 OpenCV K-Means clusteriser;
#X obj 114 5288 cv/#Mul;
#X text 180 5288 OpenCV multiplication;
#X obj 120 5320 cv/#Or;
#X text 180 5320 OpenCV bitwise OR;
#X obj 114 5352 cv/#SVD;
#X text 180 5352 OpenCV singular value decomposition (eigendecomposition);
#X obj 114 5384 cv/#Sub;
#X text 180 5384 OpenCV subtraction;
#X obj 114 5416 cv/#Xor;
#X text 180 5416 OpenCV bitwise XOR;
#X obj 138 5448 display;
#X text 180 5448 [display]: print message or grid inside of the patch;
#X obj 66 5480 doc_link doc_accolade;
#X text 180 5480 GFDP accolade;
#X obj 96 5512 doc_link doc_add;
#X text 180 5512 add a [doc_m] in the parent of the parent canvas;
#X obj 90 5544 doc_link doc_also;
#X text 180 5544 GFDP subheader for listing related classes;
#X obj 84 5576 doc_link doc_below;
#X text 180 5576 instruct [doc_layout] to put a GFDP element below another one;
#X obj 78 5608 doc_link doc_bottom;
#X text 180 5608 find the bottom of a GFDP element;
#X obj 108 5640 doc_link doc_c;
#X text 180 5640 GFDP subheader for creation arguments documentation;
#X obj 102 5672 doc_link doc_cc;
#X text 180 5672 GFDP subsubheader for creation arguments documentation;
#X obj 90 5704 doc_link doc_demo;
#X text 180 5704 header of an example patch;
#X obj 66 5736 doc_link doc_editmode;
#X text 180 5736 automatically move [cnv] and [bng] when switching from/to edit mode;
#X obj 84 5768 doc_link doc_exist;
#X text 180 5768 check whether a certain GFDP component already exists in the help patch;
#X obj 108 5800 doc_link doc_f;
#X text 180 5800 footer of a GFDP help patch;
#X obj 108 5832 doc_link doc_h;
#X text 180 5832 header of a GFDP help patch;
#X obj 108 5864 doc_link doc_i;
#X text 180 5864 GFDP subheader for inlet documentation;
#X obj 72 5896 doc_link doc_iemfont;
#X text 180 5896 figure out correct font size to use with IEMGUI widgets;
#X obj 102 5928 doc_link doc_ii;
#X text 180 5928 GFDP subsubheader for inlet documentation;
#X obj 78 5960 doc_link doc_layout;
#X text 180 5960 enforce correct layout of the abstraction containing it \,  in the parent's abstraction;
#X obj 90 5992 doc_link doc_link;
#X text 180 5992 GFDP hyperlink for opening another helpfile;
#X obj 108 6024 doc_link doc_m;
#X text 180 6024 GFDP subsubsubheader for one method or one creation argument;
#X obj 90 6056 doc_link doc_make;
#X text 180 6056 add GFDP subsubheaders in the parent of the parent canvas;
#X obj 108 6088 doc_link doc_o;
#X text 180 6088 GFDP subheader for outlet documentation;
#X obj 102 6120 doc_link doc_oo;
#X text 180 6120 GFDP subsubheader for outlet documentation;
#X obj 90 6152 doc_link doc_same;
#X text 180 6152 GFDP pseudo-comment for saying a method is same as a creation argument;
#X obj 55 6184 doremi;
#X text 180 6184 [doremi]: gui object for displaying midi notes;
#X obj 120 6273 expect;
#X text 180 6273 currently does like list.== (will do more than that in the future);
#X obj 138 6305 for;
#X text 180 6305 make sequence of float messages for each number in a range with specified stepping;
#X obj 114 6337 foreach;
#X text 180 6337 convert a list to a sequence of atom messages;
#X obj 138 6369 fps;
#X text 180 6369 measure frames per second and make statistics;
#X obj 114 6401 gemdead;
#X text 180 6401 fake [gemhead] for use with [#to_pix] without having to use [gemwin];
#X obj 66 6433 gf/canvas_count;
#X text 180 6433 tell total number of objects in a canvas;
#X obj 36 6465 gf/canvas_dollarzero;
#X text 180 6465 tell the \$0 of an uplevel canvas;
#X obj 42 6497 gf/canvas_edit_mode;
#X text 180 6497 tell the edit mode of a canvas;
#X obj 48 6529 gf/canvas_filename;
#X text 180 6529 tell the filename of a canvas;
#X obj 60 6561 gf/canvas_getpos;
#X text 180 6561 tell the position of a canvas in its parent canvas;
#X obj 48 6593 gf/canvas_hehehe 0;
#X text 180 6593 resize window automatically;
#X obj 48 6625 gf/canvas_hohoho 0;
#X text 180 6625 draw dashed box;
#X obj 66 6657 gf/canvas_index;
#X text 180 6657 tell the index of a canvas in its parent canvas;
#X obj 36 6689 gf/canvas_isselected;
#X text 180 6689 tell whether a canvas is selected in its parent canvas;
#X obj 48 6721 gf/canvas_loadbang;
#X text 180 6721 send loadbang to the most recently created objects of a canvas;
#X obj 60 6753 gf/canvas_setgop;
#X text 180 6753 set GOP options of a canvas;
#X obj 60 6785 gf/canvas_setpos;
#X text 180 6785 set the position of a canvas in its parent canvas;
#X obj 78 6817 gf/canvas_xid;
#X text 180 6817 tell the x11 id of a canvas \,  its window \,  and tell the tk id of a canvas;
#X obj 78 6849 gf/class_info;
#X text 180 6849 query info from GF's external classes (not abstractions);
#X obj 108 6881 gf/error;
#X text 180 6881 emit error message from the perspective of the current abstraction instance in its parent patch;
#X obj 84 6913 gf/find_file;
#X text 180 6913 find a file the same way that [#in] does;
#X obj 102 6945 gf/getcwd;
#X text 180 6945 tell the current working directory (as set by the "cd" shell command);
#X obj 102 6977 gf/getpid;
#X text 180 6977 tell the process id of the pd server;
#X obj 126 7009 gf/gl;
#X text 180 7009 OpenGL interface as simpler alternative to many of GEM's classes;
#X obj 72 7041 gf/io_generate;
#X text 180 7041 for internal use by #in and #out;
#X obj 120 7073 gf/l2s;
#X text 180 7073 another list-to-symbol converter;
#X obj 108 7105 gf/lol 0;
#X text 180 7105 make wires dashed or invisible \,  reposition and measure height of comments \,  etc.;
#X obj 84 7137 gf/mouse_spy;
#X text 180 7137 tell mouse/key events of a single patch window in [#out window] format;
#X obj 84 7169 doc_link gf/nbxhsl;
#X text 180 7169 combined [nbx] and [hsl] boxes as used by [#camera];
#X obj 90 7201 gf/not_open;
#X text 180 7201 used by [#in] [#in~] [#out] to represent closed state;
#X obj 72 7233 gf/object_bbox;
#X text 180 7233 find bounding box of object in canvas;
#X obj 96 7265 gf/oneshot;
#X text 180 7265 spigot that shuts itself down after each message;
#X obj 66 7297 gf/propertybang;
#X text 180 7297 bang when right-click properties;
#X obj 120 7329 gf/s2l;
#X text 180 7329 another symbol-to-list converter;
#X obj 90 7361 gf/selector;
#X text 180 7361 report the true selector of the incoming message;
#X obj 96 7393 gf/sprintf;
#X text 180 7393 the most complete wrapper of sprintf;
#X obj 90 7425 gf/string_<;
#X text 180 7425 compare two strings;
#X obj 60 7457 gf/string_length;
#X text 180 7457 measure the length of a string (in bytes);
#X obj 54 7489 gf/string_replace;
#X text 180 7489 search and replace substrings in a symbol;
#X obj 60 7521 gf/suffix_lookup;
#X text 180 7521 find the objectclass corresponding ;
#X obj 96 7553 gf/sys_gui;
#X text 180 7553 send internal Tcl/Tk commands from pd server to pd client;
#X obj 66 7585 doc_link gf/tk_button;
#X text 180 7585 Tcl/Tk button available on the canvas;
#X obj 114 7617 gf/wrap;
#X text 180 7617 another wrap like pd's wrap and zexy's wrap;
#X obj 108 7649 gridflow;
#X text 180 7649 get GridFlow's version number \,  folder \,  and the name of the OS;
#X obj 72 7681 hpgl_find_bbox;
#X text 180 7681 find the bounding box of a sequence of hpgl commands;
#X obj 60 7713 hpgl_font_render;
#X text 180 7713 include hpgl files from disk for drawing text;
#X obj 66 7745 hpgl_from_patch;
#X text 180 7745 read .pd file and try making an HPGL drawing from it;
#X obj 66 7777 hpgl_messagebox;
#X text 180 7777 make HPGL drawing of messagebox;
#X obj 72 7809 hpgl_objectbox;
#X text 180 7809 make HPGL drawing of objectbox;
#X obj 102 7841 hpgl_op +;
#X text 180 7841 use [#] on hpgl commands;
#X obj 78 7873 hpgl_to_lines;
#X text 180 7873 convert HPGL drawings to line segment grids (for #draw_polygon);
#X obj 42 7905 hpgl_track_position;
#X text 180 7905 remember last mentioned hpgl coordinate;
#X obj 60 7937 interval_overlap;
#X text 180 7937 test whether two intervals of floats overlap;
#X obj 132 7969 inv*;
#X text 180 7969 swapped /;
#X obj 132 8001 inv+;
#X text 180 8001 swapped -;
#X obj 114 8033 list.==;
#X text 180 8033 test two lists of floats and/or symbols for equality;
#X obj 108 8065 listfind;
#X text 180 8065 find index of an element in a list;
#X obj 90 8097 listflatten;
#X text 180 8097 merge all nested lists together \,  depth-first;
#X obj 108 8129 listread;
#X text 180 8129 find element at an index in a list;
#X obj 90 8161 listreverse;
#X text 180 8161 mirror image of a list;
#X obj 102 8193 norecurse;
#X text 180 8193 simple spigot for preventing control-recursion;
#X obj 94 8225 note;
#X text 180 8225 GUI for musical note (*experimental!*);
#X obj 60 8309 doc_link parallel_port;
#X text 180 8309 send to and receive from a DB25 parallel port;
#X obj 108 8341 pingpong;
#X text 180 8341 turns value of a counter into a zigzag between 0 and a given value;
#X obj 66 8373 plotter_control;
#X text 180 8373 make HPGL commands;
#X obj 72 8405 plotter_parser;
#X text 180 8405 interprets ascii codes as HPGL commands and output them as messages;
#X obj 84 8437 qwerty_piano;
#X text 180 8437 imitation of [notein] using [key] and [keyup] (for QWERTY keyboards);
#X obj 126 8469 range;
#X text 180 8469 multiple moses in cascade;
#X obj 84 8501 receives \$0-;
#X text 180 8501 multiple receives with common outlet and other outlet telling the name of intended destination;
#X obj 120 8533 route2;
#X text 180 8533 route messages but keep them intact (does not remove selector);
#X obj 120 8565 route3;
#X text 180 8565 like route \,  but the selector is only replaced by 'list' instead of \$1;
#X obj 108 8597 seq_fold;
#X text 180 8597 cascade the use of an object on all elements of an incoming message sequence;
#X obj 114 8629 setargs;
#X text 180 8629 set the arguments of an abstraction instance;
#X obj 126 8661 shunt;
#X text 180 8661 demultiplexer: send input to separately specified outlet;
#X obj 96 8693 systemtime;
#X text 180 8693 time spent by process in kernel mode \,  as measured by the OS;
#X obj 114 8725 tsctime;
#X text 180 8725 high-resolution real time \,  as measured by the CPU;
#X obj 102 8757 unix_time;
#X text 180 8757 real time as measured by the OS \,  including date;
#X obj 108 8789 usertime;
#X text 180 8789 time spent by process in non-kernel mode \,  as measured by the OS;
#X obj 126 8821 var.#;
#X text 180 8821 like [f] for grids;
#X text 0 8853 253 classes are listed in this index.;
