#N canvas 647 318 632 628 10;
#X text 227 91 +2 -2 -2 \; -2 +1 +3 \; +2 -1 -5;
#X text 103 90 +1 +4 +2 \; +2 +3 +1 \; +0 +1 +1;
#X text 60 101 adj;
#X text 78 51 3x3 ADJOINT MATRIX COMPUTATION;
#X text 101 68 (scaled inverse);
#X obj 84 224 display;
#X obj 151 224 display;
#X obj 121 146 loadbang;
#X obj 426 180 #adjugate;
#X obj 393 200 #inner;
#X obj 393 220 display;
#X obj 487 141 display;
#X obj 393 180 #t;
#X obj 151 204 #adjugate;
#X text 387 35 A*adj(A)=det(A)*I;
#X text 484 96 random matrix;
#X obj 0 0 doc_h;
#X obj 3 574 doc_also;
#X obj 0 594 doc_f;
#X obj 3 354 doc_i 1;
#X obj 14 384 doc_ii 0;
#X obj 3 314 doc_c 0;
#X obj 97 384 doc_m i0 grid;
#X obj 3 512 doc_o 1;
#X obj 14 542 doc_oo 0;
#X obj 97 542 doc_m o0 grid;
#X text 232 542 3-by-3 grid;
#X obj 393 66 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 393 104 # rand;
#X msg 393 84 3 3 # 10;
#X obj 393 124 # - 5;
#X text 186 101 ==;
#X obj 84 204 #import;
#X msg 121 166 3 3 # 1 4 2 2 3.01 1 0 1 1;
#X text 4 22 Contributed by Federico FERRI;
#X obj 103 574 # cross;
#X text 232 384 3-by-3 grid;
#X text 232 406 this makes 3 cross-products to produce a matrix that
is det(A)/A \, that is \, the determinant of the input times the inverse
of the input.;
#X text 232 454 this technique can't apply to other-sized grids. You'd
have to use [cv/#Invert]. But there is nothing in GridFlow that can
compute a general determinant.;
#X obj 157 574 cv/#Invert;
#X connect 7 0 33 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 12 0 9 0;
#X connect 12 1 8 0;
#X connect 13 0 6 0;
#X connect 17 1 35 0;
#X connect 17 1 39 0;
#X connect 22 1 36 0;
#X connect 22 1 37 0;
#X connect 22 1 38 0;
#X connect 25 1 26 0;
#X connect 27 0 29 0;
#X connect 28 0 30 0;
#X connect 29 0 28 0;
#X connect 30 0 11 0;
#X connect 30 0 12 0;
#X connect 32 0 5 0;
#X connect 33 0 13 0;
#X connect 33 0 32 0;
