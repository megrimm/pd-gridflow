#N canvas 670 44 554 638 10;
#X text 99 365 BANG;
#X floatatom 132 89 5 0 0 0 - - -;
#X floatatom 177 89 5 0 0 0 - - -;
#X floatatom 20 160 5 0 0 0 - - -;
#X floatatom 132 200 5 0 0 0 - - -;
#X text 115 201 R:;
#X floatatom 193 200 5 0 0 0 - - -;
#X floatatom 253 200 5 0 0 0 - - -;
#X text 176 201 G:;
#X text 237 201 B:;
#X floatatom 73 161 5 0 0 0 - - -;
#X text 1 161 X:;
#X text 58 162 Y:;
#X obj 132 107 #pack;
#X obj 296 134 #in;
#X msg 296 115 load r001.jpg;
#X obj 20 131 #unpack;
#X obj 132 175 #unpack 3;
#X obj 134 150 #store;
#X text 150 364 A bang at the left inlet will force [#store] to send
its value to the outlet.;
#X text 97 332 GRID;
#X text 129 54 this example allows you to select a single pixel from
the loaded picture and view its rgb value.;
#X text 8 24 The [#store] stores exactly one grid \, using the right
inlet. You fetch it back \, or selected subparts using the left inlet.
;
#X text 100 261 GRID;
#X text 150 263 [#store] accepts a grid as a creation argument which
initializes the first value to be stored.;
#X obj 296 181 display;
#X obj 86 94 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 296 161 display;
#X text 149 331 Accepts a grid.;
#X text 97 431 GRID;
#X text 150 431 Accepts a grid or a subpart of it.;
#X text 152 461 Reassign;
#X text 153 483 put_at;
#X text 221 470 To be clarified;
#X text 12 589 GRID;
#X text 59 589 Outputs the grid as requested.;
#X obj 296 96 loadbang;
#X obj 3 306 doc_i 2;
#X obj 0 0 doc_h;
#X obj 3 234 doc_c 1;
#X obj 14 330 doc_ii 0;
#X obj 14 419 doc_ii 1;
#X obj 3 529 doc_o 1;
#X obj 14 553 doc_oo 0;
#X obj 14 258 doc_cc 0;
#X connect 1 0 13 0;
#X connect 2 0 13 1;
#X connect 13 0 16 0;
#X connect 13 0 18 0;
#X connect 13 0 27 0;
#X connect 14 0 18 1;
#X connect 15 0 14 0;
#X connect 16 0 3 0;
#X connect 16 1 10 0;
#X connect 17 0 4 0;
#X connect 17 1 6 0;
#X connect 17 2 7 0;
#X connect 18 0 17 0;
#X connect 18 0 25 0;
#X connect 26 0 18 0;
#X connect 36 0 15 0;
