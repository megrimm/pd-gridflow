#N canvas 674 0 632 469 10;
#X obj 3 150 doc_c 2;
#X obj 36 65 #transpose;
#X obj 3 234 doc_i 3;
#X obj 3 353 doc_o 1;
#X obj 0 0 doc_h;
#X obj 14 180 doc_cc 0;
#X obj 14 202 doc_cc 1;
#X obj 14 264 doc_ii 0;
#X obj 14 299 doc_ii 1;
#X obj 14 321 doc_ii 2;
#X obj 14 383 doc_oo 0;
#X obj 97 180 doc_m c0 float;
#X obj 97 202 doc_m c1 float;
#X obj 97 264 doc_m i0 grid;
#X obj 97 299 doc_m i1 float;
#X obj 97 321 doc_m i2 float;
#X obj 97 383 doc_m o0 grid;
#X text 232 264 swaps the two specified dimensions \; dimension numbers
are as in [#join].;
#X text 232 180 dimension number;
#X text 232 202 dimension number;
#X obj 232 299 doc_same 0;
#X obj 232 321 doc_same 1;
#X obj 0 435 doc_f;
#X text 232 383 remapped image;
#X text 233 98 this is like matrix-transposition that you frequently
read about in linear algebra books.;
#X obj 3 415 doc_also;
#X obj 103 415 #reverse;
#X obj 163 415 #remap_image;
#X text 231 47 remaps contents of a grid by swapping dimensions of
indices. for example \, [#transpose 0 1] does the same as [#remap_image]x[#reverse]
in the case of a square grid.;
#X connect 11 1 18 0;
#X connect 12 1 19 0;
#X connect 13 1 17 0;
#X connect 14 1 20 0;
#X connect 15 1 21 0;
#X connect 16 1 23 0;
#X connect 25 1 26 0;
#X connect 25 1 27 0;
