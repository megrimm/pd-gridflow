#N canvas 596 134 632 584 10;
#X obj 0 0 doc_h;
#X obj 3 530 doc_also;
#X obj 0 550 doc_f;
#X obj 103 530 args;
#X obj 3 204 doc_c 0;
#X obj 3 244 doc_i 1;
#X obj 14 274 doc_ii 0;
#X obj 97 406 doc_m i0 set;
#X obj 97 296 doc_m i0 add2;
#X obj 97 318 doc_m i0 addcomma;
#X obj 97 384 doc_m i0 addsemi;
#X obj 3 490 doc_o 0;
#X text 232 384 just like messageboxes;
#X text 232 318 just like messageboxes;
#X text 232 296 just like messageboxes;
#X obj 30 52 setargs;
#X text 108 155 for a demonstration \, please open this abstraction
instance;
#X obj 93 173 setargs-demo 569 42 691 752 854 631 622 848 237 930;
#X obj 93 156 tgl 15 0 empty empty empty 17 7 0 10 -204786 -1 -1 1
1;
#X obj 93 137 loadbang;
#X obj 97 340 doc_m i0 adddollar;
#X obj 97 362 doc_m i0 adddollsym;
#X text 232 340 (future use);
#X text 232 362 (future use);
#X text 90 43 set abstraction instance arguments using a messagebox-like
interface. this updates the binbuf \, the objectbox's appearance \,
the canvas-environment \, and the titlebar of the patch window \, whenever
one of its five methods are called.;
#X obj 97 274 doc_m i0 add;
#X text 232 274 just like messageboxes.;
#X text 232 406 just like messageboxes. don't forget to write the classname!
If you use it without arguments \, make sure that the classname is
the next thing that you add. But the classname will only be applied
at the next reload \, delete/undo \, copy/paste \, or duplicate.;
#X obj 139 530 gf/propertybang;
#X connect 1 1 3 0;
#X connect 1 1 28 0;
#X connect 7 1 27 0;
#X connect 8 1 14 0;
#X connect 9 1 13 0;
#X connect 10 1 12 0;
#X connect 19 0 18 0;
#X connect 20 1 22 0;
#X connect 21 1 23 0;
#X connect 25 1 26 0;
