#N canvas 604 245 632 581 10;
#X obj 0 0 doc_h;
#X obj 0 552 doc_f;
#X obj 20 64 #rotatificator;
#X text 191 138 named in honour of Laszlo Zlotz (a character from Achille
Talon);
#X obj 3 532 doc_also;
#X obj 103 532 #rotate;
#X obj 3 286 doc_i 2;
#X obj 3 418 doc_o 1;
#X obj 14 448 doc_oo 0;
#X obj 14 316 doc_ii 0;
#X obj 14 386 doc_ii 1;
#X obj 97 316 doc_m i0 float;
#X obj 97 338 doc_m i0 axis;
#X obj 3 180 doc_c 3;
#X obj 14 210 doc_cc 0;
#X obj 14 232 doc_cc 1;
#X obj 14 254 doc_cc 2;
#X obj 97 448 doc_m o0 grid;
#X obj 97 386 doc_m i1;
#X obj 97 210 doc_m c0 float/int;
#X obj 97 232 doc_m c1 float/int;
#X obj 97 254 doc_m c2 float/int;
#X text 232 210 from;
#X text 232 232 to;
#X text 232 254 n;
#X text 232 338 \$1=from (default:0) \; \$2=to (default: 1) \; \$3=n
(default: 2);
#X text 232 386 angle;
#X text 232 316 scale;
#X text 192 44 generates a N by N rotation matrix that rotates through
two dimensions of your choice (from \, to) by a certain angle (in centidegrees).
values produced are integers. the rotation matrix is multiplied by
the given scale factor such that after an eventual [#inner] \, a division
by the same amount would be performed. greater scale factors are more
precise.;
#X text 232 448 rotation matrix such that if rows 'from' and 'to' were
deleted and columns 'from' and 'to' were deleted \, you'd have an identity
matrix. in other words \, the rotation happens in a plane space made
of the two dimensions represented by those two rows and two columns.
;
#X connect 4 1 5 0;
#X connect 11 1 27 0;
#X connect 12 1 25 0;
#X connect 17 1 29 0;
#X connect 18 1 26 0;
#X connect 19 1 22 0;
#X connect 20 1 23 0;
#X connect 21 1 24 0;
