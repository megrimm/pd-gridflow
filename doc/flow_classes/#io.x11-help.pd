#N canvas 522 12 632 652 10;
#X obj 0 0 doc_h;
#X obj 3 618 doc_c 0..;
#X msg 40 648 open x11;
#X msg 40 668 open x11 here;
#X msg 40 708 open x11 local 0;
#X text 178 649 synonym of "open x11 here".;
#X text 181 668 connects to the default X11 server \, according to
your environment variable "DISPLAY".;
#X text 182 708 connects to a display server on this machine.;
#X msg 39 739 open x11 remote foo.org 0;
#X text 201 738 connects to a remote X11 display server using TCP.
Port number will be 6000 plus the display number \, because of the
X11 standard.;
#X text 141 38 supports 15 \, 16 \, 24 \, 32-bit truecolor displays
;
#X text 141 57 now also support 8-bit indexed displays \, using a private
colormap configured as 3:3:2 RGB. When using 8-bit you can specify
the "use_stripes" option to use a completely different color scheme
involving R \, G \, B diagonal stripes \, a kind of 6:6:6 RGB spread
over three pixels.;
#X text 141 129 If you are using Windows or MacOS 10: you will have
to install a X11 server. This will emulate Unix display on your OS.
(note: Unix systems also need a X11 server \, but it's built-in and
handles the video driver directly). In the case of MacOS 10 and QNX
that both use non-X11 display technology on top of a basically Unix
OS \, the OS comes with a X11 server \, but it may be on a "bundled
software" CD.;
#X msg 37 794 open x11 display foo.org:0;
#X obj 3 857 doc_i 1;
#X obj 14 887 doc_ii 0;
#X text 232 909 with [#out] \, displays a frame;
#X text 232 887 with [#in] \, captures a frame;
#X text 232 1158 \$1=height \$2=width. changes the window's size \,
just like sending a grid dim(height \, width \, 3) would. this affects
the size of screen captures too.;
#X text 232 1114 This makes the cursor invisible.;
#X obj 3 2385 doc_also;
#X obj 103 2385 #io.quartz;
#X obj 175 2385 #io.sdl;
#X text 141 227 Destroying the object (or sending "close") should close
the window.;
#X obj 35 65 #out x11;
#X text 140 259 because of the design of Xlib \, or if any of the connections
involved crashes \, then the whole program has to be terminated. (don't
you love xlib). Something similar happens if you close any of the windows
yourself \, but IIRC this could be fixed.;
#X text 140 330 only one window may be used per x11 connection (to
simplify matters \; this doesn't reduce flexibility).;
#X obj 3 1566 doc_o 1;
#X obj 14 1596 doc_oo 0;
#X text 232 1596 grid(rows columns rgb);
#X obj 97 1897 doc_m o0 position;
#X text 232 1897 \$1=y \$2=x \$3=buttons;
#X text 232 1919 This is emitted every time the cursor moves inside
the window connected to this format handler. This is also emitted when
the cursor is dragging from inside to outside the window. This is also
emitted when a mouse button is pressed.;
#X text 232 1993 The y and x coordinates are relative to the upper
right corner of the window. Specific button states may be extracted
from the button value by applying [>> buttonnumber] and then checking
whether the result is odd.;
#X text 232 2054 0: Shift;
#X text 232 2076 1: Caps Lock;
#X text 232 2098 2: Control;
#X text 232 2120 3: Alternate;
#X text 232 2142 4: NumLock;
#X text 232 2164 5: (unknown);
#X text 232 2186 6: Meta or Window Key;
#X text 232 2208 7: Scroll Lock;
#X text 232 2230 8: Left Mouse Button;
#X text 232 2252 9: Middle Mouse Button or Mouse Wheel Click;
#X text 232 2274 10: Right Mouse Button;
#X text 232 2296 11: Wheel Up;
#X text 232 2318 12: Wheel Down;
#X text 232 2340 NOTE: This message form may become longer in the future
\, but the already defined parts will stay the same.;
#X text 232 1692 \$1=y \$2=x \$3=buttons \$4=keyname;
#X text 232 1827 \$1=y \$2=x \$3=buttons \$4=keyname;
#X text 232 1849 Same as keypress but when a key gets released instead.
NOTE: This message form may become longer in the future \, but the
already defined parts will stay the same.;
#X obj 0 2405 doc_f;
#X text 208 795 other syntax for 'remote'.;
#X text 141 480 there is one last argument that may be added to every
"open" message of [#in x11]. if you don't put it \, a new toplevel
window is created. if you put "root" then the screen's wallpaper will
be used instead (it may fail to work with some popular window managers).
You can also put a window number \, e.g. 0x28003ff \, you may connect
to an existing window. you can find out the number of a window by using
a tool like xwininfo \, part of X11 standard tools. (This used to work
also for [#out x11]. it's a bug);
#X msg 38 824 open x11 here override_redirect;
#X text 237 823 if you need borderless untouchable windows.;
#X text 141 377 then you can add override_redirect option to open a
window that will not be handled by the window manager \, so that it
doesn't have any borders \, for example. however \, this is "dangerous"
\, as you can lock yourself out of your computer. On Linux you can
escape that using Ctrl+Alt+F1 or similar. Another problem is that it
prevents the window from getting 'keypress' 'keyrelease' events.;
#X text 232 1714 This is emitted when a keyboard key is pressed while
this format handler's window is active. Keynames follow the X11 standard
\, similarly to PureData's [keyname] object. The only exception is
that keynames that are digits get prefixed by a capital D so that they
don't get mistaken for actual numbers. NOTE: This message form may
become longer in the future \, but the already defined parts will stay
the same.;
#X text 232 1618 Resizes the window to the size of the grid \; Encodes
that grid in the display's pixel format \; Also displays it if autodraw
is greater than 0 \; The values must be in range 0-255 \, or else they
will be "wrapped".;
#X text 232 1136 move the window to the position \$1=y \$2=x;
#X obj 97 909 doc_m i0 grid;
#X obj 97 887 doc_m i0 bang;
#X obj 97 1158 doc_m i0 out_size;
#X obj 97 1228 doc_m i0 setcursor;
#X obj 97 1114 doc_m i0 hidecursor;
#X obj 97 1596 doc_m o0 grid;
#X obj 97 1692 doc_m o0 keypress;
#X obj 97 1827 doc_m o0 keyrelease;
#X obj 97 1136 doc_m i0 move;
#X obj 97 1394 doc_m i0 shared_memory;
#X obj 97 1534 doc_m i0 xvideo;
#X obj 97 1451 doc_m i0 title;
#X obj 97 1512 doc_m i0 warp;
#X obj 97 1206 doc_m i0 set_geometry;
#X text 232 1206 does: out_size \$1 \$2 \, move \$3 \$4;
#X text 232 1451 puts the symbol \$1 in the titlebar instead of the
default GridFlow (240 \, 320 \, 3)" or similar). if title is an empty
string \, the title goes back to the default mode of writing "GridFlow"
and the window size.;
#X text 232 1512 moves mouse cursor to location y=\$1 x=\$2. use sparingly.
;
#X text 232 1534 for future use.;
#X text 232 1394 0: don't use explicit shared memory for sending to
the video card.;
#X text 232 1429 1: use shared memory if available.;
#X obj 97 931 doc_m i0 border;
#X text 232 931 0: hide window border. this does not work in Apple
X11. It may or may not work on Linux X11 (or other X11 servers) depending
on the window manager. This was tested on GNOME/Metacity.;
#X text 232 992 1: show window border (default);
#X text 232 1014 this option is not the same as override_redirect \,
because it asks the window manager to not put the border \, while still
managing the window otherwise. thus \, for example \, Metacity still
allows Alt+Button1 and Alt+Tab to affect that window \, which is not
the case with override_redirect. Also \, border is different \, as
this setting can be changed while the window exists.;
#X text 229 2385 [#see];
#X text 277 2385 [gf/mouse_spy];
#X obj 373 2385 #mouse;
#X text 232 1263 Note that if your cursor table has them numbered from
0 to 154 using only even numbers \, then those cursor numbers are all
doubled compared to the ones GridFlow uses.;
#X text 232 1228 \$1=cursor_id. \$1=cursor_id. Selects one of the 77
predefined cursors of X11 \, from 0 to 76;
#X text 232 1311 Note that out-of-range values are now rejected.;
#X text 232 1333 On Linux \, the file /usr/include/X11/cursorfont.h
contain a list of cursor names \, with doubled numbers \, but this
file isn't always already installed. On Ubuntu \, this is in the package
named "libx11-dev".;
#X connect 20 1 21 0;
#X connect 20 1 22 0;
#X connect 20 1 84 0;
#X connect 20 1 85 0;
#X connect 20 1 86 0;
#X connect 30 1 31 0;
#X connect 30 1 32 0;
#X connect 30 1 33 0;
#X connect 30 1 34 0;
#X connect 30 1 35 0;
#X connect 30 1 36 0;
#X connect 30 1 37 0;
#X connect 30 1 38 0;
#X connect 30 1 39 0;
#X connect 30 1 40 0;
#X connect 30 1 41 0;
#X connect 30 1 42 0;
#X connect 30 1 43 0;
#X connect 30 1 44 0;
#X connect 30 1 45 0;
#X connect 30 1 46 0;
#X connect 30 1 47 0;
#X connect 60 1 16 0;
#X connect 61 1 17 0;
#X connect 62 1 18 0;
#X connect 63 1 88 0;
#X connect 63 1 87 0;
#X connect 63 1 89 0;
#X connect 63 1 90 0;
#X connect 64 1 19 0;
#X connect 65 1 29 0;
#X connect 65 1 58 0;
#X connect 66 1 48 0;
#X connect 66 1 57 0;
#X connect 67 1 49 0;
#X connect 67 1 50 0;
#X connect 68 1 59 0;
#X connect 69 1 78 0;
#X connect 69 1 79 0;
#X connect 70 1 77 0;
#X connect 71 1 75 0;
#X connect 72 1 76 0;
#X connect 73 1 74 0;
#X connect 80 1 81 0;
#X connect 80 1 82 0;
#X connect 80 1 83 0;
