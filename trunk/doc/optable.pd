#N canvas 0 0 1024 768 10;
#X obj 0 0 cnv 15 1024 30 empty empty empty 20 12 0 14 20 -66577 0;
#X text 10 0 op name;
#X text 96 0 description;
#X text 512 0 effect on pixels;
#X text 768 0 effect on coords;
#X obj 0 32 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 32 op ignore;
#X text 96 32  A ;
#X text 512 32 no effect;
#X text 768 32 no effect;
#X obj 0 64 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 64 op put;
#X text 96 64  B ;
#X text 512 64 replace by;
#X text 768 64 replace by;
#X obj 0 96 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 96 op +;
#X text 96 96  A + B ;
#X text 512 96 brightness \,  crossfade;
#X text 768 96 move \,  morph;
#X obj 0 128 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 128 op -;
#X text 96 128  A - B ;
#X text 512 128 brightness \,  motion detection;
#X text 768 128 move \,  motion detection;
#X obj 0 160 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 160 op inv+;
#X text 96 160  B - A ;
#X text 512 160 negate then contrast;
#X text 768 160 180 degree rotate then move;
#X obj 0 192 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 192 op *;
#X text 96 192  A * B ;
#X text 512 192 contrast;
#X text 768 192 zoom out;
#X obj 0 224 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 224 op /;
#X text 96 224  A / B \,  rounded towards zero ;
#X text 512 224 contrast;
#X text 768 224 zoom in;
#X obj 0 256 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 256 op div;
#X text 96 256  A / B \,  rounded downwards ;
#X text 512 256 contrast;
#X text 768 256 zoom in;
#X obj 0 288 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 288 op inv*;
#X text 96 288  B / A \,  rounded towards zero ;
#X text 512 288 --;
#X text 768 288 --;
#X obj 0 320 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 320 op swapdiv;
#X text 96 320  B / A \,  rounded downwards ;
#X text 512 320 --;
#X text 768 320 --;
#X obj 0 352 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 352 op %;
#X text 96 352  A % B \,  modulo (goes with div) ;
#X text 512 352 --;
#X text 768 352 tile;
#X obj 0 384 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 384 op swap%;
#X text 96 384  B % A \,  modulo (goes with div) ;
#X text 512 384 --;
#X text 768 384 --;
#X obj 0 416 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 416 op rem;
#X text 96 416  A % B \,  remainder (goes with /) ;
#X text 512 416 --;
#X text 768 416 --;
#X obj 0 448 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 448 op swaprem;
#X text 96 448  B % A \,  remainder (goes with /) ;
#X text 512 448 --;
#X text 768 448 --;
#X obj 0 480 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 480 op gcd;
#X text 96 480 greatest common divisor;
#X text 512 480 --;
#X text 768 480 --;
#X obj 0 512 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 512 op lcm;
#X text 96 512 least common multiple;
#X text 512 512 --;
#X text 768 512 --;
#X obj 0 544 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 544 op |;
#X text 96 544  A or B \,  bitwise ;
#X text 512 544 bright munchies;
#X text 768 544 bottomright munchies;
#X obj 0 576 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 576 op ^;
#X text 96 576  A xor B \,  bitwise ;
#X text 512 576 symmetric munchies (fractal checkers);
#X text 768 576 symmetric munchies (fractal checkers);
#X obj 0 608 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 608 op &;
#X text 96 608  A and B \,  bitwise ;
#X text 512 608 dark munchies;
#X text 768 608 topleft munchies;
#X obj 0 640 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 640 op <<;
#X text 96 640  A * (2**(B % 32)) \,  which is left-shifting ;
#X text 512 640 like *;
#X text 768 640 like *;
#X obj 0 672 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 672 op >>;
#X text 96 672  A / (2**(B % 32)) \,  which is right-shifting ;
#X text 512 672 like / \, div;
#X text 768 672 like / \, div;
#X obj 0 704 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 704 op ||;
#X text 96 704  if A is zero then B else A ;
#X text 512 704 --;
#X text 768 704 --;
#X obj 0 736 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 736 op &&;
#X text 96 736  if A is zero then zero else B;
#X text 512 736 --;
#X text 768 736 --;
#X obj 0 768 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 768 op min;
#X text 96 768  the lowest value in A \, B ;
#X text 512 768 clipping;
#X text 768 768 clipping (of individual points);
#X obj 0 800 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 800 op max;
#X text 96 800  the highest value in A \, B ;
#X text 512 800 clipping;
#X text 768 800 clipping (of individual points);
#X obj 0 832 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 832 op cmp;
#X text 96 832  -1 when A&lt \; B; 0 when A=B; 1 when A&gt;B. ;
#X text 512 832 --;
#X text 768 832 --;
#X obj 0 864 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 864 op ==;
#X text 96 864  is A equal to B ? 1=true \,  0=false ;
#X text 512 864 --;
#X text 768 864 --;
#X obj 0 896 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 896 op !=;
#X text 96 896  is A not equal to B ? ;
#X text 512 896 --;
#X text 768 896 --;
#X obj 0 928 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 928 op >;
#X text 96 928  is A greater than B ? ;
#X text 512 928 --;
#X text 768 928 --;
#X obj 0 960 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 960 op <=;
#X text 96 960  is A not greater than B ? ;
#X text 512 960 --;
#X text 768 960 --;
#X obj 0 992 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 992 op <;
#X text 96 992  is A less than B ? ;
#X text 512 992 --;
#X text 768 992 --;
#X obj 0 1024 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1024 op >=;
#X text 96 1024 is A not less than B ? ;
#X text 512 1024 --;
#X text 768 1024 --;
#X obj 0 1056 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1056 op sin*;
#X text 96 1056  B * sin(A) in centidegrees ;
#X text 512 1056 --;
#X text 768 1056 waves \,  rotations;
#X obj 0 1088 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1088 op cos*;
#X text 96 1088  B * cos(A) in centidegrees ;
#X text 512 1088 --;
#X text 768 1088 waves \,  rotations;
#X obj 0 1120 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1120 op atan;
#X text 96 1120  arctan(A/B) in centidegrees ;
#X text 512 1120 --;
#X text 768 1120 find angle to origin (part of polar transform);
#X obj 0 1152 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1152 op tanh*;
#X text 96 1152  B * tanh(A) in centidegrees ;
#X text 512 1152 smooth clipping;
#X text 768 1152 smooth clipping (of individual points) \,  neural sigmoid, fuzzy logic;
#X obj 0 1184 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1184 op log*;
#X text 96 1184  B * log(A) (in base e) ;
#X text 512 1184 --;
#X text 768 1184 --;
#X obj 0 1216 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1216 op gamma;
#X text 96 1216  floor(pow(a/256.0 \, 256.0/b)*256.0) ;
#X text 512 1216 gamma correction;
#X text 768 1216 --;
#X obj 0 1248 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1248 op **;
#X text 96 1248  A**B \,  that is, A raised to power B ;
#X text 512 1248 gamma correction;
#X text 768 1248 --;
#X obj 0 1280 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1280 op abs-;
#X text 96 1280  absolute value of (A-B) ;
#X text 512 1280 --;
#X text 768 1280 --;
#X obj 0 1312 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1312 op rand;
#X text 96 1312  randomly produces a non-negative number below A ;
#X text 512 1312 --;
#X text 768 1312 --;
#X obj 0 1344 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1344 op sqrt;
#X text 96 1344  square root of A \,  rounded downwards ;
#X text 512 1344 --;
#X text 768 1344 --;
#X obj 0 1376 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1376 op sq-;
#X text 96 1376  (A-B) times (A-B) ;
#X text 512 1376 --;
#X text 768 1376 --;
#X obj 0 1408 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1408 op avg;
#X text 96 1408  (A+B)/2 ;
#X text 512 1408 --;
#X text 768 1408 --;
#X obj 0 1440 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1440 op hypot;
#X text 96 1440  square root of (A*A+B*B) ;
#X text 512 1440 --;
#X text 768 1440 --;
#X obj 0 1472 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1472 op clip+;
#X text 96 1472  like A+B but overflow causes clipping instead of wrapping around (coming soon) ;
#X text 512 1472 --;
#X text 768 1472 --;
#X obj 0 1504 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1504 op clip-;
#X text 96 1504  like A-B but overflow causes clipping instead of wrapping around (coming soon) ;
#X text 512 1504 --;
#X text 768 1504 --;
#X obj 0 1536 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1536 op erf*;
#X text 96 1536  integral of e^(-x*x) dx ... (coming soon \;  what ought to be the scaling factor?) ;
#X text 512 1536 --;
#X text 768 1536 --;
#X obj 0 1568 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1568 op weight;
#X text 96 1568  number of "1" bits in an integer;
#X text 512 1568 --;
#X text 768 1568 --;
#X obj 0 1600 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1600 op sin;
#X text 96 1600 sin(A-B) in radians \,  float only;
#X text 512 1600 --;
#X text 768 1600 --;
#X obj 0 1632 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1632 op cos;
#X text 96 1632 cos(A-B) in radians \,  float only;
#X text 512 1632 --;
#X text 768 1632 --;
#X obj 0 1664 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1664 op atan2;
#X text 96 1664 atan2(A \, B) in radians, float only;
#X text 512 1664 --;
#X text 768 1664 --;
#X obj 0 1696 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1696 op tanh;
#X text 96 1696 tanh(A-B) in radians \,  float only;
#X text 512 1696 --;
#X text 768 1696 --;
#X obj 0 1728 cnv 15 1024 30 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1728 op exp;
#X text 96 1728 exp(A-B) in radians \,  float only;
#X text 512 1728 --;
#X text 768 1728 --;
#X obj 0 1760 cnv 15 1024 30 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1760 op log;
#X text 96 1760 log(A-B) in radians \,  float only;
#X text 512 1760 --;
#X text 768 1760 --;
#X obj 10 1792 outlet;
#X connect 6 0 280 0;
#X connect 11 0 280 0;
#X connect 16 0 280 0;
#X connect 21 0 280 0;
#X connect 26 0 280 0;
#X connect 31 0 280 0;
#X connect 36 0 280 0;
#X connect 41 0 280 0;
#X connect 46 0 280 0;
#X connect 51 0 280 0;
#X connect 56 0 280 0;
#X connect 61 0 280 0;
#X connect 66 0 280 0;
#X connect 71 0 280 0;
#X connect 76 0 280 0;
#X connect 81 0 280 0;
#X connect 86 0 280 0;
#X connect 91 0 280 0;
#X connect 96 0 280 0;
#X connect 101 0 280 0;
#X connect 106 0 280 0;
#X connect 111 0 280 0;
#X connect 116 0 280 0;
#X connect 121 0 280 0;
#X connect 126 0 280 0;
#X connect 131 0 280 0;
#X connect 136 0 280 0;
#X connect 141 0 280 0;
#X connect 146 0 280 0;
#X connect 151 0 280 0;
#X connect 156 0 280 0;
#X connect 161 0 280 0;
#X connect 166 0 280 0;
#X connect 171 0 280 0;
#X connect 176 0 280 0;
#X connect 181 0 280 0;
#X connect 186 0 280 0;
#X connect 191 0 280 0;
#X connect 196 0 280 0;
#X connect 201 0 280 0;
#X connect 206 0 280 0;
#X connect 211 0 280 0;
#X connect 216 0 280 0;
#X connect 221 0 280 0;
#X connect 226 0 280 0;
#X connect 231 0 280 0;
#X connect 236 0 280 0;
#X connect 241 0 280 0;
#X connect 246 0 280 0;
#X connect 251 0 280 0;
#X connect 256 0 280 0;
#X connect 261 0 280 0;
#X connect 266 0 280 0;
#X connect 271 0 280 0;
#X connect 276 0 280 0;
#X obj 95 0 cnv 0 0 1792 empty empty empty -1 12 0 14 0 -66577 0;
#X obj 511 0 cnv 0 0 1792 empty empty empty -1 12 0 14 0 -66577 0;
#X obj 767 0 cnv 0 0 1792 empty empty empty -1 12 0 14 0 -66577 0;
