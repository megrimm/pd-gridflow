#N canvas 675 0 572 514 10;
#X text 153 55 transforms a dim[a... \, b] grid into a dim[a... \,
b-1] grid. there is a projection plane perpendicular to the last axis
and whose position is given by the creation argument. each vector's
length is adjusted so that it lies onto that plane. then the last dimension
of each vector is dropped;
#X obj 30 127 #pack 3;
#X floatatom 75 82 5 0 0 0 - - -;
#X obj 77 100 max 1;
#X floatatom 12 95 5 0 0 0 - - -;
#X floatatom 52 57 5 0 0 0 - - -;
#X obj 30 190 #print;
#X obj 79 182 #print;
#X obj 79 163 #perspective;
#X obj 102 469 #redim;
#X obj 150 469 #ravel;
#X obj 0 0 doc_h;
#X obj 3 469 doc_also;
#X obj 3 217 doc_c 1;
#X obj 3 268 doc_i 1;
#X obj 3 413 doc_o 1;
#X obj 14 437 doc_oo 0;
#X obj 14 292 doc_ii 0;
#X obj 14 241 doc_cc 0;
#X obj 100 292 doc_m i0 grid;
#X obj 100 437 doc_m o0 grid;
#X text 191 286 transforms a Dim[A... \, B] grid into a Dim[A... \,
B-1] grid. There is a projection plane perpendicular to the last axis
and whose position is given by the "depth" parameter. Each vector's
length is adjusted so that it lies onto that plane. Then the last dimension
of each vector is dropped.;
#X text 187 357 useful for converting from 3-D geometry to 2-D geometry.
Also useful for converting homogeneous 3-D into regular 3-D \, as homogeneous
3-D is really just regular 4-D...(!);
#X obj 100 241 doc_m c0 float;
#X text 194 239 depth;
#X connect 1 0 6 0;
#X connect 1 0 8 0;
#X connect 2 0 3 0;
#X connect 3 0 1 2;
#X connect 4 0 1 0;
#X connect 5 0 1 1;
#X connect 8 0 7 0;
