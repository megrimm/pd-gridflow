#N canvas 596 24 632 642 10;
#X obj 0 0 doc_h;
#X obj 3 587 doc_also;
#X obj 0 607 doc_f;
#X obj 103 587 args;
#X obj 3 204 doc_c 0;
#X obj 3 244 doc_i 1;
#X obj 14 274 doc_ii 0;
#X obj 97 454 doc_m i0 set;
#X obj 97 296 doc_m i0 add2;
#X obj 97 318 doc_m i0 addcomma;
#X obj 97 384 doc_m i0 addsemi;
#X obj 3 547 doc_o 0;
#X text 232 384 just like messageboxes;
#X text 232 318 just like messageboxes;
#X text 232 296 just like messageboxes;
#X obj 30 52 setargs;
#X text 89 138 for a demonstration \, please open this abstraction
instance;
#X obj 93 157 setargs-demo 728 489 912 16 650 204 114 534 260 898 \$0-something
\$0-something;
#X obj 97 340 doc_m i0 adddollar;
#X obj 97 362 doc_m i0 adddollsym;
#X text 90 43 set abstraction instance arguments using a messagebox-like
interface. this updates the binbuf \, the objectbox's appearance \,
the canvas-environment \, and the titlebar of the patch window \, whenever
one of its five methods are called.;
#X obj 97 274 doc_m i0 add;
#X obj 139 587 gf/propertybang;
#X text 232 340 just like messageboxes;
#X text 232 274 just like messageboxes;
#X text 232 454 just like messageboxes;
#X text 232 476 don't forget to write the classname! If you use it
without arguments \, make sure that the classname is the next thing
that you add. But the classname will only be applied at the next reload
\, delete/undo \, copy/paste \, or duplicate.;
#X text 232 362 just like messageboxes;
#X obj 97 406 doc_m i0 args;
#X text 232 406 INTERNAL USE ONLY : this sets the \$1 \, \$2 \, \$3
\, ... variables of the instance and the titlebar of the instance.
this is called automatically by any of the other methods here.;
#X obj 437 185 setargs-demo2 a 37 b 42 c 53;
#X connect 1 1 3 0;
#X connect 1 1 22 0;
#X connect 7 1 25 0;
#X connect 7 1 26 0;
#X connect 8 1 14 0;
#X connect 9 1 13 0;
#X connect 10 1 12 0;
#X connect 18 1 23 0;
#X connect 19 1 27 0;
#X connect 21 1 24 0;
#X connect 28 1 29 0;
