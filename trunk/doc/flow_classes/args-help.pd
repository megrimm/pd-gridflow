#N canvas 692 0 600 631 10;
#X text 354 70 demo default args;
#X text 354 90 demo rest of args;
#X text 354 130 demo missing args;
#X obj 12 89 args-demo pommes poires ananas biscuits-soda;
#X obj 12 129 args-demo;
#X obj 12 69 args-demo blah;
#X obj 12 109 args-demo dorval \, temperature -18 \, pression 99.5
;
#X text 354 110 demo comma args;
#X obj 0 0 doc_h;
#X obj 3 352 doc_i 1;
#X obj 3 153 doc_c n;
#X obj 14 382 doc_ii 0;
#X obj 3 518 doc_o 1..;
#X obj 97 382 doc_m i0 bang;
#X obj 14 183 doc_cc any;
#X obj 97 183 doc_m cany symbol;
#X text 200 183 "*" represents the rest of arguments;
#X text 200 205 other symbols represent mandatory arguments;
#X obj 0 602 doc_f;
#X obj 14 548 doc_oo any;
#X obj 97 548 doc_m oany <atom>;
#X text 200 548 output of single argument;
#X text 200 570 output of rest of arguments \, if last arg of [args]
is a "*".;
#X obj 97 570 doc_m oany <list>;
#X text 200 382 sends one message per outlet right-to-left. if there
is a wildcard (*) as the last argument \, any extra arguments go there
as a list message. Then for any missing arguments that have default
values \, the default values are sent \, right to left. Then for each
present argument that is not extra \, that argument will be sent on
its own outlet. Finally \, each init-message (comma-separated) is parsed
from the arguments and sent (magically) to the first inlet of the abstraction
itself.;
#X obj 97 227 doc_m cany nested-list;
#X text 200 227 represent optional arguments as nested-lists;
#X text 200 249 inside the nested-list \, \$1 must be the name of the
argument \, \$2 must be "a" (the single letter) \, and \$3 must be
the default value. the "a" is actually for future use (type-checking).
;
#X text 97 314 the star can only occur once and at the end \, and all
optionals must follow all mandatories.;
#X connect 13 1 24 0;
#X connect 15 1 16 0;
#X connect 15 1 17 0;
#X connect 20 1 21 0;
#X connect 23 1 22 0;
#X connect 25 1 26 0;
#X connect 25 1 27 0;
