#N canvas 229 59 632 642 10;
#X obj 0 0 doc_h;
#X obj 3 631 doc_also;
#X obj 0 651 doc_f;
#X obj 103 631 pd/print;
#X obj 152 44 print;
#X text 188 44 =;
#X obj 199 44 gf/print;
#X text 254 44 while GridFlow is loaded;
#X obj 70 70 print;
#X text 107 70 while GridFlow is not loaded =;
#X obj 292 69 pd/print;
#X text 347 70 while GridFlow is loaded;
#X text 116 106 known differences :;
#X text 135 121 [pd/print] says consistency check failed when encountering
grids and blobs;
#X text 136 154 [gf/print] doesn't support vanilla's -n (but neither
does pd-extended);
#X obj 3 445 doc_c 1;
#X obj 14 475 doc_cc 0;
#X obj 3 507 doc_i 1;
#X obj 14 537 doc_ii 0;
#X obj 3 591 doc_o 0;
#X obj 97 475 doc_m c0 symbol;
#X text 232 475 prefix (default: print);
#X obj 97 559 doc_m i0 <any>;
#X text 232 559 message to be printed;
#X text 135 184 [gf/print] doesn't support extended's multi-prefix
(but neither does vanilla);
#X text 136 216 [gf/print] prints pointer values prefixed by backslash
p \, instead of printing just "(pointer)";
#X text 138 247 [gf/print] can print nested lists (an atomtype introduced
by GridFlow) correctly (but they are visually confusable with symbols
that contain backslashes... just like spaces in symbols are confusable
with element separators);
#X text 137 305 [gf/print] prints a grid atom message (selector "grid"
\, atomtype A_GRIDOUT) as if it were printed by [#print].;
#X text 137 338 [gf/print] has trouble with parentheses in incoming
messages (just like all other GridFlow objects) because they get parsed
as nested-list delimiters. It used to have problems with parens in
creation arguments (but this is fixed since 9.12 using CLASS_NOPARENS).
;
#X obj 97 537 doc_m i0 grid;
#X text 232 537 print something through a hidden [#print].;
#X connect 1 1 3 0;
#X connect 20 1 21 0;
#X connect 22 1 23 0;
#X connect 29 1 30 0;
