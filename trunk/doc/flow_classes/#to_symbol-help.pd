#N canvas 680 0 567 642 10;
#X obj 11 298 cnv 15 63 17 empty empty empty 20 12 0 14 -241291 -66577
0;
#X text 5 469 GRID;
#X obj 176 269 display;
#X obj 174 357 display;
#X symbolatom 353 359 12 0 0 0 - - -;
#X text 59 469 Accepts a grid that will be transformed into a symbol.
;
#X text 57 557 The grid is transformed into a single message containing
a symbol.;
#X msg 11 209 72 101 108 108 111 32 87 111 114 108 100 33;
#X obj 11 228 #import (3 2 2);
#X text 324 209 <-- create the grid here;
#X obj 11 298 #to_symbol;
#X obj 11 357 print converted_grid;
#X obj 0 0 doc_h;
#X obj 3 503 doc_o 1;
#X obj 3 415 doc_i 1;
#X obj 3 389 doc_c 0;
#X text 3 557 SYMBOL;
#X text 11 102 note that a zero value will cause pd to truncate the
symbol there. thus a symbol may have less bytes than the grid it was
made from.;
#X text 10 147 remember that a byte is not necessarily a codepoint
\, a codepoint is not necessarily a character \, and all characters
don't always have the same width. these distinctions don't matter for
all encodings.;
#X text 11 32 Produces a symbol from grid data in its input. The values
are expected to be valid in the character encoding that you are using
\, but no check will be performed for that \, and additionally \, no
check will be made that the generated symbol only contains characters
that can be put in a symbol.;
#X obj 14 439 doc_ii 0;
#X obj 15 527 doc_oo 0;
#X connect 7 0 8 0;
#X connect 8 0 2 0;
#X connect 8 0 10 0;
#X connect 10 0 3 0;
#X connect 10 0 4 0;
#X connect 10 0 11 0;
