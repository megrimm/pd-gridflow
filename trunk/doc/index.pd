#N canvas 0 0 632 659 10;
#X obj 0 0 doc_demo;
#X obj 138 50 # +;
#X text 180 50 plain numeric operators on grids: + - * / etc;
#X obj -6 82 #apply_colormap_channelwise;
#X text 180 82 apply color correction tables separately on each channel;
#X obj 54 114 #background_model;
#X text 180 114 make mask from learning to distinguish background from foreground;
#X obj 114 146 #border;
#X text 180 146 add padding on sides of a grid;
#X obj 114 178 #camera;
#X text 180 178 control panel for opening cameras;
#X obj 114 210 #cast i;
#X text 180 210 convert grid from one number type to another;
#X obj 102 242 #centroid;
#X text 180 242 find centroid (weighted average) of the coordinates of a grid;
#X obj 114 274 #change;
#X text 180 274 send grid only if different from previous grid;
#X obj 102 306 #checkers;
#X text 180 306 make image of chequered background in two tones of grey;
#X obj 126 338 #clip;
#X text 180 338 min and max;
#X obj 72 370 #cluster_avg 4;
#X text 180 370 computes several averages at once according to a table of indices;
#X obj 4 402 #color;
#X text 180 402 GUI for selecting a colour;
#X obj 102 473 #contrast;
#X text 180 473 adjust contrast in two different ways;
#X obj 102 505 #convolve;
#X text 180 505 compute convolution product of a grid (blur and edge-detection);
#X obj 132 537 #dim;
#X text 180 537 get the size (dimensions) of a grid;
#X obj 78 569 #downscale_by;
#X text 180 569 reduce the size of an image by a whole factor;
#X obj 96 601 #draw_hpgl;
#X text 180 601 plot lines given in HPGL format \,  using [#draw_polygon];
#X obj 90 633 #draw_image;
#X text 180 633 picture-in-picture;
#X obj 84 665 #draw_points;
#X text 180 665 (future use);
#X obj 78 697 #draw_polygon;
#X text 180 697 draw polygon in an image;
#X obj 96 729 #draw_rect;
#X text 180 729 draw a rectangle in an image;
#X obj 84 761 #draw_slider;
#X text 180 761 draw a slider in an image;
#X obj 78 793 #edit_polygon;
#X text 180 793 draw a polygon in an image and react to mouse events;
#X obj 54 825 #extract_diagonal;
#X text 180 825 extract the main diagonal from a matrix;
#X obj 126 857 #fade;
#X text 180 857 fade in exponential-decay fashion (linear recurrence);
#X obj 102 889 #fade_lin;
#X text 180 889 fade in piecewise-linear fashion;
#X obj 102 921 #fastblur;
#X text 180 921 speedy shortcut for rectangular blur;
#X obj 132 953 #fft;
#X text 180 953 compute forward or inverse one-or-two-dimensional complex FFT of a grid;
#X obj 102 985 #finished;
#X text 180 985 bang when grid transmission has ended;
#X obj 114 1017 #fold +;
#X text 180 1017 compute the sum of each row \,  product of each row, and other similar operations;
#X obj 96 1049 #for 0 4 1;
#X text 180 1049 make a grid from all numbers or coordinates in a certain range;
#X obj 102 1081 #from_pix;
#X text 180 1081 convert pix (GEM) to grid;
#X obj 120 1113 #gamma;
#X text 180 1113 apply gamma correction;
#X obj 120 1145 #grade;
#X text 180 1145 make an index of the sorting of a grid;
#X obj 54 1177 #greyscale_to_rgb;
#X text 180 1177 convert greyscale to RGB;
#X obj 120 1209 #hello;
#X text 180 1209 make 7 colour bars;
#X obj 102 1241 #hueshift;
#X text 180 1241 apply hue shift by rotating the color wheel;
#X obj 114 1273 #import;
#X text 180 1273 convert float \,  list, or symbol ASCII codes, to a grid;
#X obj 138 1305 #in;
#X text 180 1305 open file or device for reading or download;
#X obj 120 1337 #inner;
#X text 180 1337 scalar ("dot") product \,  matrix product, tensor contraction, image channel remapping, etc.;
#X obj 84 1369 doc_link #io.aalib;
#X text 180 1369 open an aalib window;
#X obj 78 1401 doc_link #io.dc1394;
#X text 180 1401 open a faiawaia "DC" camera (not DV) using a Linux-compatible OS;
#X obj 90 1433 doc_link #io.grid;
#X text 180 1433 read or write a .grid file (GridFlow storage format);
#X obj 90 1465 doc_link #io.jpeg;
#X text 180 1465 read or write a .jpeg file;
#X obj 90 1497 doc_link #io.mpeg;
#X text 180 1497 read a .mpeg video file;
#X obj 96 1529 doc_link #io.png;
#X text 180 1529 read a .png image file;
#X obj 96 1561 doc_link #io.ppm;
#X text 180 1561 read a .pbm or .pgm or .ppm image file or write a .ppm image file;
#X obj 78 1593 doc_link #io.quartz;
#X text 180 1593 open a Quartz window (OSX);
#X obj 30 1625 doc_link #io.quicktimeapple;
#X text 180 1625 read a .mov video file (OSX);
#X obj 24 1657 doc_link #io.quicktimecamera;
#X text 180 1657 open a QuickTime Sequence Grabber (Camera / Video input) device;
#X obj 48 1689 doc_link #io.quicktimehw;
#X text 180 1689 read a .mov or .avi video file (Linux);
#X obj 96 1721 doc_link #io.sdl;
#X text 180 1721 open a SDL window (Windows \, Linux,OSX);
#X obj 66 1753 doc_link #io.videodev;
#X text 180 1753 open a V4L1 device (Linux-only interface for video cameras and video digitisers);
#X obj 96 1785 doc_link #io.x11;
#X text 180 1785 open a X11 window (Linux \, etc);
#X obj 126 1817 #join;
#X text 180 1817 join two grids together along any dimension;
#X obj 96 1849 #labelling;
#X text 180 1849 tag connected pixels with region numbers in a two-tone single-channel image;
#X obj 120 1881 #layer;
#X text 180 1881 layer two same-sized images;
#X obj 60 1913 #line_to_polygon;
#X text 180 1913 convert line (as point pair) to polygon (rotated rectangle);
#X obj 90 1945 #make_arrow;
#X text 180 1945 make an arrow "polygon" from 2 points (for use with line mode of [#draw_polygon]);
#X obj 90 1977 #make_cross;
#X text 180 1977 make cross-shaped polygon;
#X obj 107 2009 #many tgl 3 3;
#X text 180 2009 [#many]: create and organise many identical GUI objects;
#X obj 114 2078 #moment;
#X text 180 2078 find 1st or 2nd order moment (weighted average or variance) of the coordinates of a grid;
#X obj 78 2110 #moment_polar;
#X text 180 2110 convert covariance matrix to the longest and shortest radius of an ellipse and a rotation angle;
#X obj 54 2142 #motion_detection;
#X text 180 2142 frame difference with some options;
#X obj 120 2174 #mouse;
#X text 180 2174 converts mouse events to reports of clicks \,  drags, unclicks, motions, and separate buttons and wheel;
#X obj 60 2206 #noise_gate_yuvs;
#X text 180 2206 replaces dark pixels by black pixels in signed YUV images;
#X obj 132 2238 #out;
#X text 180 2238 open file or device for writing or upload;
#X obj 108 2270 #outer +;
#X text 180 2270 apply numeric operator on all possible combinations of elements of one grid with elements of another;
#X obj 126 2302 #pack;
#X text 180 2302 combine floats on separate inlets to make a grid;
#X obj 84 2334 #perspective;
#X text 180 2334 divide each point by its depth;
#X obj 78 2366 #polygon_area;
#X text 180 2366 find area of a polygon in square pixels;
#X obj 42 2398 #polygon_comparator;
#X text 180 2398 find similarity between two polygons independently of rotation \,  by radial maps and FFT;
#X obj 48 2430 #polygon_each_edge;
#X text 180 2430 convert a polygon to a sequence of overlapping 2-sided polygons representing edges;
#X obj 66 2462 #polygon_moment;
#X text 180 2462 find average of all points inside of a polygon;
#X obj 48 2494 #polygon_perimetre;
#X text 180 2494 find perimetre of a polygon in pixels (euclidian);
#X obj 42 2526 #polygon_radial_map;
#X text 180 2526 find radius of a polygon from a given origin \,  sampled at equally spaced angles;
#X obj 96 2558 #posterize;
#X text 180 2558 quantise pixel values;
#X obj 120 2590 #print;
#X text 180 2590 print to console;
#X obj 120 2622 #ravel;
#X text 180 2622 do #redim so that a grid keeps same number of elements but just one dimension;
#X obj 114 2654 #record;
#X text 180 2654 wrapper around [#in quicktime];
#X obj 102 2686 #redim ();
#X text 180 2686 change the size of a grid by restreaming contents into a new shape;
#X obj 90 2718 #reinterval;
#X text 180 2718 change the scale of values from one interval to another;
#X obj 84 2750 #remap_image;
#X text 180 2750 apply object chain on pixel positions to make new image from chosen pixels of the input image;
#X obj 108 2782 #reverse;
#X text 180 2782 mirror image of a grid along a dimension;
#X obj 54 2814 #rgb_to_greyscale;
#X text 180 2814 convert RGB to greyscale;
#X obj 84 2846 #rgb_to_rgba;
#X text 180 2846 convert RGB to RGBA (but setting alpha to 0);
#X obj 90 2878 #rgb_to_yuv;
#X text 180 2878 convert RGB to unsigned YUV;
#X obj 84 2910 #rgba_to_rgb;
#X text 180 2910 convert RGBA to RGB;
#X obj 114 2942 #rotate;
#X text 180 2942 rotate points through two axes (or rotate pixels as points in a colorspace);
#X obj 72 2974 #rotatificator;
#X text 180 2974 make rotation matrix for any two dimensions chosen from a space of any number of dimensions;
#X obj 90 3006 #saturation;
#X text 180 3006 multiply chroma by some value;
#X obj 102 3038 #scale_by;
#X text 180 3038 reduce the size of an image by a whole factor;
#X obj 102 3070 #scale_to;
#X text 180 3070 scale an image from one size to any other size by deleting or duplicating rows and columns;
#X obj 114 3102 #scan +;
#X text 180 3102 compute the cumulative sums of each row \,  and other similar operations;
#X obj 91 3134 #see;
#X text 180 3134 [#see]: view video output within patch and collect mouse/key info;
#X obj 102 3206 #seq_fold;
#X text 180 3206 cascade the use of an object on all elements of an incoming grid message sequence;
#X obj 120 3238 #slice;
#X text 180 3238 crop an image using a start point (top left) and end point (bottom right);
#X obj 102 3270 #solarize;
#X text 180 3270 like pingpong but on all pixel values of a grid;
#X obj 126 3302 #sort;
#X text 180 3302 sort each row of a grid;
#X obj 114 3334 #spread;
#X text 180 3334 add noise to each vector (point or pixel);
#X obj 120 3366 #store;
#X text 180 3366 store image in RAM \,  in-place picture-in-picture, and make lookups in various ways;
#X obj 126 3398 #swap;
#X text 180 3398 like [swap] for grids;
#X obj 138 3430 #t;
#X text 180 3430 like [t a a] for grids;
#X obj 72 3462 #text_to_image;
#X text 180 3462 use a fixed-width font grid to make a tiling of characters as specified by a text string;
#X obj 102 3494 #to_float;
#X text 180 3494 convert grid to sequence of floats;
#X obj 114 3526 #to_iem;
#X text 180 3526 convert grid(3) to IEMGUI colour code;
#X obj 108 3558 #to_list;
#X text 180 3558 convert grid to list;
#X obj 90 3590 #to_literal;
#X text 180 3590 convert grid to grid-literal (list with a # sign);
#X obj 114 3622 #to_pix;
#X text 180 3622 convert grid to pix (GEM);
#X obj 96 3654 #to_symbol;
#X text 180 3654 convert grid of ASCII codes to symbol;
#X obj 96 3686 #transpose;
#X text 180 3686 swap two dimensions out of any \,  in a grid;
#X obj 126 3718 #type;
#X text 180 3718 get a symbol representing the number type of a grid;
#X obj 114 3750 #unpack;
#X text 180 3750 split a grid into floats on separate outlets;
#X obj 114 3782 #window;
#X text 180 3782 a [#out window] that can be toggled to appear and disappear;
#X obj 90 3814 #yuv_to_rgb;
#X text 180 3814 convert unsigned YUV to RGB;
#X obj 132 3846 args;
#X text 180 3846 pick up the arguments of an abstraction instance \,  including nested lists and init-messages;
#X obj 126 3878 ascii;
#X text 180 3878 write integer as decimal in ascii codes;
#X obj 96 3910 ascii_to_f;
#X text 180 3910 converts a list of ascii codes to a float;
#X obj 84 3942 class_exists;
#X text 180 3942 figure out whether a class has been loaded by pd;
#X obj 114 3974 cv/#Add;
#X text 180 3974 OpenCV addition;
#X obj 114 4006 cv/#And;
#X text 180 4006 OpenCV bitwise AND;
#X obj 72 4038 cv/#ApproxPoly;
#X text 180 4038 OpenCV polygon approximator;
#X obj 60 4070 cv/#CornerHarris;
#X text 180 4070 OpenCV Harris corner-detector;
#X obj 114 4102 cv/#Div;
#X text 180 4102 OpenCV division;
#X obj 90 4134 cv/#Ellipse;
#X text 180 4134 OpenCV draw ellipse;
#X obj 30 4166 cv/#HaarDetectObjects;
#X text 180 4166 OpenCV (future use);
#X obj 96 4198 cv/#Invert;
#X text 180 4198 OpenCV invert matrix;
#X obj 96 4230 cv/#KMeans;
#X text 180 4230 OpenCV K-Means clusteriser;
#X obj 114 4262 cv/#Mul;
#X text 180 4262 OpenCV multiplication;
#X obj 120 4294 cv/#Or;
#X text 180 4294 OpenCV bitwise OR;
#X obj 114 4326 cv/#SVD;
#X text 180 4326 OpenCV singular value decomposition (eigendecomposition);
#X obj 114 4358 cv/#Sub;
#X text 180 4358 OpenCV subtraction;
#X obj 114 4390 cv/#Xor;
#X text 180 4390 OpenCV bitwise XOR;
#X obj 138 4422 display;
#X text 180 4422 [display]: print message or grid inside of the patch;
#X obj 66 4454 doc_link doc_accolade;
#X text 180 4454 GFDP accolade;
#X obj 96 4486 doc_link doc_add;
#X text 180 4486 add a [doc_m] in the parent of the parent canvas;
#X obj 90 4518 doc_link doc_also;
#X text 180 4518 GFDP subheader for listing related classes;
#X obj 84 4550 doc_link doc_below;
#X text 180 4550 instruct [doc_layout] to put a GFDP element below another one;
#X obj 78 4582 doc_link doc_bottom;
#X text 180 4582 find the bottom of a GFDP element;
#X obj 108 4614 doc_link doc_c;
#X text 180 4614 GFDP subheader for creation arguments documentation;
#X obj 102 4646 doc_link doc_cc;
#X text 180 4646 GFDP subsubheader for creation arguments documentation;
#X obj 90 4678 doc_link doc_demo;
#X text 180 4678 header of an example patch;
#X obj 66 4710 doc_link doc_editmode;
#X text 180 4710 automatically move [cnv] and [bng] when switching from/to edit mode;
#X obj 84 4742 doc_link doc_exist;
#X text 180 4742 check whether a certain GFDP component already exists in the help patch;
#X obj 108 4774 doc_link doc_f;
#X text 180 4774 footer of a GFDP help patch;
#X obj 108 4806 doc_link doc_h;
#X text 180 4806 header of a GFDP help patch;
#X obj 108 4838 doc_link doc_i;
#X text 180 4838 GFDP subheader for inlet documentation;
#X obj 102 4870 doc_link doc_ii;
#X text 180 4870 GFDP subsubheader for inlet documentation;
#X obj 78 4902 doc_link doc_layout;
#X text 180 4902 enforce correct layout of the abstraction containing it \,  in the parent's abstraction;
#X obj 90 4934 doc_link doc_link;
#X text 180 4934 GFDP hyperlink for opening another helpfile;
#X obj 108 4966 doc_link doc_m;
#X text 180 4966 GFDP subsubsubheader for one method or one creation argument;
#X obj 90 4998 doc_link doc_make;
#X text 180 4998 add GFDP subsubheaders in the parent of the parent canvas;
#X obj 108 5030 doc_link doc_o;
#X text 180 5030 GFDP subheader for outlet documentation;
#X obj 102 5062 doc_link doc_oo;
#X text 180 5062 GFDP subsubheader for outlet documentation;
#X obj 90 5094 doc_link doc_same;
#X text 180 5094 GFDP pseudo-comment for saying a method is same as a creation argument;
#X obj 55 5126 doremi;
#X text 180 5126 [doremi]: gui object for displaying midi notes;
#X obj 120 5215 expect;
#X text 180 5215 currently does like list.== (will do more than that in the future);
#X obj 138 5247 for;
#X text 180 5247 make sequence of float messages for each number in a range with specified stepping;
#X obj 114 5279 foreach;
#X text 180 5279 convert a list to a sequence of atom messages;
#X obj 138 5311 fps;
#X text 180 5311 measure frames per second and make statistics;
#X obj 108 5343 gf.error;
#X text 180 5343 emit error message from the perspective of the current abstraction instance in its parent patch;
#X obj 72 5375 gf.io_generate;
#X text 180 5375 for internal use by #in and #out;
#X obj 96 5407 gf.oneshot;
#X text 180 5407 spigot that shuts itself down after each message;
#X obj 60 5439 gf.suffix_lookup;
#X text 180 5439 find the objectclass corresponding ;
#X obj 66 5471 gf/canvas_count;
#X text 180 5471 tell total number of objects in a canvas;
#X obj 36 5503 gf/canvas_dollarzero;
#X text 180 5503 tell the \$0 of an uplevel canvas;
#X obj 42 5535 gf/canvas_edit_mode;
#X text 180 5535 tell the edit mode of a canvas;
#X obj 48 5567 gf/canvas_filename;
#X text 180 5567 tell the filename of a canvas;
#X obj 60 5599 gf/canvas_getpos;
#X text 180 5599 tell the position of a canvas in its parent canvas;
#X obj 66 5631 gf/canvas_index;
#X text 180 5631 tell the index of a canvas in its parent canvas;
#X obj 36 5663 gf/canvas_isselected;
#X text 180 5663 tell whether a canvas is selected in its parent canvas;
#X obj 48 5695 gf/canvas_loadbang;
#X text 180 5695 send loadbang to the most recently created objects of a canvas;
#X obj 60 5727 gf/canvas_setgop;
#X text 180 5727 set GOP options of a canvas;
#X obj 60 5759 gf/canvas_setpos;
#X text 180 5759 set the position of a canvas in its parent canvas;
#X obj 78 5791 gf/canvas_xid;
#X text 180 5791 tell the x11 id of a canvas \,  its window, and tell the tk id of a canvas;
#X obj 84 5823 gf/find_file;
#X text 180 5823 find a file the same way that [#in] does;
#X obj 102 5855 gf/getcwd;
#X text 180 5855 tell the current working directory (as set by the "cd" shell command);
#X obj 102 5887 gf/getpid;
#X text 180 5887 tell the process id of the pd server;
#X obj 84 5919 gf/mouse_spy;
#X text 180 5919 tell mouse/key events of a single patch window in [#out window] format;
#X obj 90 5951 gf/selector;
#X text 180 5951 report the true selector of the incoming message;
#X obj 90 5983 gf/string_<;
#X text 180 5983 compare two strings;
#X obj 60 6015 gf/string_length;
#X text 180 6015 measure the length of a string (in bytes);
#X obj 54 6047 gf/string_replace;
#X text 180 6047 search and replace substrings in a symbol;
#X obj 108 6079 gridflow;
#X text 180 6079 get GridFlow's version number...;
#X obj 72 6111 hpgl_find_bbox;
#X text 180 6111 find the bounding box of a sequence of hpgl commands;
#X obj 60 6143 hpgl_font_render;
#X text 180 6143 include hpgl files from disk for drawing text;
#X obj 114 6175 hpgl_op;
#X text 180 6175 use [#] on hpgl commands;
#X obj 42 6207 hpgl_track_position;
#X text 180 6207 remember last mentioned hpgl coordinate;
#X obj 60 6239 interval_overlap;
#X text 180 6239 test whether two intervals of floats overlap;
#X obj 132 6271 inv*;
#X text 180 6271 swapped /;
#X obj 132 6303 inv+;
#X text 180 6303 swapped -;
#X obj 114 6335 list.==;
#X text 180 6335 test two lists of floats and/or symbols for equality;
#X obj 108 6367 listfind;
#X text 180 6367 find index of an element in a list;
#X obj 90 6399 listflatten;
#X text 180 6399 merge all nested lists together \,  depth-first;
#X obj 108 6431 listread;
#X text 180 6431 find element at an index in a list;
#X obj 90 6463 listreverse;
#X text 180 6463 mirror image of a list;
#X obj 102 6495 norecurse;
#X text 180 6495 simple spigot for preventing control-recursion;
#X obj 78 6527 parallel_port;
#X text 180 6527 send to and receive from a DB25 parallel port;
#X obj 108 6559 pingpong;
#X text 180 6559 turns value of a counter into a zigzag between 0 and a given value;
#X obj 66 6591 plotter_control;
#X text 180 6591 make HPGL commands;
#X obj 72 6623 plotter_parser;
#X text 180 6623 interprets ascii codes as HPGL commands and output them as messages;
#X obj 84 6655 qwerty_piano;
#X text 180 6655 imitation of [notein] using [key] and [keyup];
#X obj 126 6687 range;
#X text 180 6687 multiple moses in cascade;
#X obj 84 6719 receives \$0-;
#X text 180 6719 multiple receives with common outlet and other outlet telling the name of intended destination;
#X obj 120 6751 route2;
#X text 180 6751 route messages but keep them intact (does not remove selector);
#X obj 108 6783 seq_fold;
#X text 180 6783 cascade the use of an object on all elements of an incoming message sequence;
#X obj 126 6815 shunt;
#X text 180 6815 demultiplexer: send input to separately specified outlet;
#X obj 96 6847 systemtime;
#X text 180 6847 time spent by process in kernel mode \,  as measured by the OS;
#X obj 114 6879 tsctime;
#X text 180 6879 high-resolution real time \,  as measured by the CPU;
#X obj 102 6911 unix_time;
#X text 180 6911 real time as measured by the OS \,  including date;
#X obj 108 6943 usertime;
#X text 180 6943 time spent by process in non-kernel mode \,  as measured by the OS;
#X obj 126 6975 var.#;
#X text 180 6975 like [f] for grids;
#X text 0 7007 212 classes are listed in this index.;
