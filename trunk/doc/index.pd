#N canvas 0 0 632 659 10;
#X obj 0 0 doc_demo;
#X obj 3 32 doc_section General Topics;
#X obj 108 64 doc_link about 1;
#X text 180 64 about GridFlow (credits \,  etc);
#X obj 108 96 doc_link intro 1;
#X text 180 96 the main goal of this library (but not the only one);
#X obj 114 128 doc_link grid 1;
#X text 180 128 what is a grid ?;
#X obj 108 160 doc_link image 1;
#X text 180 160 an image of pixels is just one way to use a grid;
#X obj 96 192 doc_link numtype 1;
#X text 180 192 numtypes allow you to balance precision \,  range \,  headroom and efficiency ("speed");
#X obj 108 224 doc_link numop 1;
#X text 180 224 numops represent ways of combining two numbers (usually);
#X obj 3 256 doc_section Object Classes;
#X obj 138 288 # +;
#X text 180 288 plain numeric operators on grids: + - * / etc;
#X obj -6 320 #apply_colormap_channelwise;
#X text 180 320 apply color correction tables separately on each channel;
#X obj 54 352 #background_model;
#X text 180 352 make mask from learning to distinguish background from foreground;
#X obj 114 384 #border;
#X text 180 384 add padding on sides of a grid;
#X obj 114 416 #camera;
#X text 180 416 control panel for opening cameras;
#X obj 114 448 #cast i;
#X text 180 448 convert grid from one number type to another;
#X obj 102 480 #centroid;
#X text 180 480 find centroid (weighted average) of the coordinates of a grid;
#X obj 114 512 #change;
#X text 180 512 send grid only if different from previous grid;
#X obj 102 544 #checkers;
#X text 180 544 make image of chequered background in two tones of grey;
#X obj 126 576 #clip;
#X text 180 576 min and max;
#X obj 72 608 #cluster_avg 4;
#X text 180 608 computes several averages at once according to a table of indices;
#X obj 4 640 #color;
#X text 180 640 GUI for selecting a colour;
#X obj 102 711 #contrast;
#X text 180 711 adjust contrast in two different ways;
#X obj 102 743 #convolve;
#X text 180 743 compute convolution product of a grid (blur and edge-detection);
#X obj 132 775 #dim;
#X text 180 775 get the size (dimensions) of a grid;
#X obj 78 807 #downscale_by;
#X text 180 807 reduce the size of an image by a whole factor;
#X obj 96 839 #draw_hpgl;
#X text 180 839 plot lines given in HPGL format \,  using [#draw_polygon];
#X obj 90 871 #draw_image;
#X text 180 871 picture-in-picture;
#X obj 84 903 #draw_points;
#X text 180 903 (future use);
#X obj 78 935 #draw_polygon;
#X text 180 935 draw polygon in an image;
#X obj 96 967 #draw_rect;
#X text 180 967 draw a rectangle in an image;
#X obj 84 999 #draw_slider;
#X text 180 999 draw a slider in an image;
#X obj 54 1031 #extract_diagonal;
#X text 180 1031 extract the main diagonal from a matrix;
#X obj 126 1063 #fade;
#X text 180 1063 fade in exponential-decay fashion (linear recurrence);
#X obj 102 1095 #fade_lin;
#X text 180 1095 fade in piecewise-linear fashion;
#X obj 102 1127 #fastblur;
#X text 180 1127 speedy shortcut for rectangular blur;
#X obj 132 1159 #fft;
#X text 180 1159 compute forward or inverse one-or-two-dimensional complex FFT of a grid;
#X obj 102 1191 #finished;
#X text 180 1191 bang when grid transmission has ended;
#X obj 114 1223 #fold +;
#X text 180 1223 compute the sum of each row \,  product of each row, and other similar operations;
#X obj 96 1255 #for 0 4 1;
#X text 180 1255 make a grid from all numbers or coordinates in a certain range;
#X obj 102 1287 #from_pix;
#X text 180 1287 convert pix (GEM) to grid;
#X obj 120 1319 #gamma;
#X text 180 1319 apply gamma correction;
#X obj 120 1351 #grade;
#X text 180 1351 make an index of the sorting of a grid;
#X obj 54 1383 #greyscale_to_rgb;
#X text 180 1383 convert greyscale to RGB;
#X obj 120 1415 #hello;
#X text 180 1415 make 7 colour bars;
#X obj 102 1447 #hueshift;
#X text 180 1447 apply hue shift by rotating the color wheel;
#X obj 114 1479 #import;
#X text 180 1479 convert float \,  list, or symbol ASCII codes, to a grid;
#X obj 138 1511 #in;
#X text 180 1511 open file or device for reading or download;
#X obj 120 1543 #inner;
#X text 180 1543 scalar ("dot") product \,  matrix product, tensor contraction, image channel remapping, etc.;
#X obj 84 1575 doc_link #io.aalib;
#X text 180 1575 open an aalib window;
#X obj 78 1607 doc_link #io.dc1394;
#X text 180 1607 open a faiawaia "DC" camera (not DV) using a Linux-compatible OS;
#X obj 90 1639 doc_link #io.grid;
#X text 180 1639 read or write a .grid file (GridFlow storage format);
#X obj 90 1671 doc_link #io.jpeg;
#X text 180 1671 read or write a .jpeg file;
#X obj 90 1703 doc_link #io.mpeg;
#X text 180 1703 read a .mpeg video file;
#X obj 96 1735 doc_link #io.png;
#X text 180 1735 read a .png image file;
#X obj 96 1767 doc_link #io.ppm;
#X text 180 1767 read a .pbm or .pgm or .ppm image file or write a .ppm image file;
#X obj 78 1799 doc_link #io.quartz;
#X text 180 1799 open a Quartz window (OSX);
#X obj 30 1831 doc_link #io.quicktimeapple;
#X text 180 1831 read a .mov video file (OSX);
#X obj 24 1863 doc_link #io.quicktimecamera;
#X text 180 1863 open a QuickTime Sequence Grabber (Camera / Video input) device;
#X obj 48 1895 doc_link #io.quicktimehw;
#X text 180 1895 read a .mov or .avi video file (Linux);
#X obj 96 1927 doc_link #io.sdl;
#X text 180 1927 open a SDL window (Windows \, Linux,OSX);
#X obj 66 1959 doc_link #io.videodev;
#X text 180 1959 open a V4L1 device (Linux-only interface for video cameras and video digitisers);
#X obj 96 1991 doc_link #io.x11;
#X text 180 1991 open a X11 window (Linux \, etc);
#X obj 126 2023 #join;
#X text 180 2023 join two grids together along any dimension;
#X obj 96 2055 #labelling;
#X text 180 2055 tag connected pixels with region numbers in a two-tone single-channel image;
#X obj 120 2087 #layer;
#X text 180 2087 layer two same-sized images;
#X obj 60 2119 #line_to_polygon;
#X text 180 2119 convert line (as point pair) to polygon (rotated rectangle);
#X obj 90 2151 #make_arrow;
#X text 180 2151 make an arrow "polygon" from 2 points (for use with line mode of [#draw_polygon]);
#X obj 90 2183 #make_cross;
#X text 180 2183 make cross-shaped polygon;
#X obj 107 2215 #many tgl 3 3;
#X text 180 2215 [#many]: create and organise many identical GUI objects;
#X obj 114 2284 #moment;
#X text 180 2284 find 1st or 2nd order moment (weighted average or variance) of the coordinates of a grid;
#X obj 78 2316 #moment_polar;
#X text 180 2316 convert covariance matrix to the longest and shortest radius of an ellipse and a rotation angle;
#X obj 54 2348 #motion_detection;
#X text 180 2348 frame difference with some options;
#X obj 120 2380 #mouse;
#X text 180 2380 converts mouse events to reports of clicks \,  drags, unclicks, motions, and separate buttons and wheel;
#X obj 60 2412 #noise_gate_yuvs;
#X text 180 2412 replaces dark pixels by black pixels in signed YUV images;
#X obj 132 2444 #out;
#X text 180 2444 open file or device for writing or upload;
#X obj 108 2476 #outer +;
#X text 180 2476 apply numeric operator on all possible combinations of elements of one grid with elements of another;
#X obj 126 2508 #pack;
#X text 180 2508 combine floats on separate inlets to make a grid;
#X obj 84 2540 #perspective;
#X text 180 2540 divide each point by its depth;
#X obj 78 2572 #polygon_area;
#X text 180 2572 find area of a polygon in square pixels;
#X obj 42 2604 #polygon_comparator;
#X text 180 2604 find similarity between two polygons independently of rotation \,  by radial maps and FFT;
#X obj 48 2636 #polygon_each_edge;
#X text 180 2636 convert a polygon to a sequence of overlapping 2-sided polygons representing edges;
#X obj 66 2668 #polygon_moment;
#X text 180 2668 find average of all points inside of a polygon;
#X obj 48 2700 #polygon_perimetre;
#X text 180 2700 find perimetre of a polygon in pixels (euclidian);
#X obj 42 2732 #polygon_radial_map;
#X text 180 2732 find radius of a polygon from a given origin \,  sampled at equally spaced angles;
#X obj 96 2764 #posterize;
#X text 180 2764 quantise pixel values;
#X obj 120 2796 #print;
#X text 180 2796 print to console;
#X obj 120 2828 #ravel;
#X text 180 2828 do #redim so that a grid keeps same number of elements but just one dimension;
#X obj 114 2860 #record;
#X text 180 2860 wrapper around [#in quicktime];
#X obj 102 2892 #redim ();
#X text 180 2892 change the size of a grid by restreaming contents into a new shape;
#X obj 90 2924 #reinterval;
#X text 180 2924 change the scale of values from one interval to another;
#X obj 84 2956 #remap_image;
#X text 180 2956 apply object chain on pixel positions to make new image from chosen pixels of the input image;
#X obj 108 2988 #reverse;
#X text 180 2988 mirror image of a grid along a dimension;
#X obj 54 3020 #rgb_to_greyscale;
#X text 180 3020 convert RGB to greyscale;
#X obj 84 3052 #rgb_to_rgba;
#X text 180 3052 convert RGB to RGBA (but setting alpha to 0);
#X obj 90 3084 #rgb_to_yuv;
#X text 180 3084 convert RGB to unsigned YUV;
#X obj 84 3116 #rgba_to_rgb;
#X text 180 3116 convert RGBA to RGB;
#X obj 114 3148 #rotate;
#X text 180 3148 rotate points through two axes (or rotate pixels as points in a colorspace);
#X obj 72 3180 #rotatificator;
#X text 180 3180 make rotation matrix for any two dimensions chosen from a space of any number of dimensions;
#X obj 90 3212 #saturation;
#X text 180 3212 multiply chroma by some value;
#X obj 102 3244 #scale_by;
#X text 180 3244 reduce the size of an image by a whole factor;
#X obj 102 3276 #scale_to;
#X text 180 3276 scale an image from one size to any other size by deleting or duplicating rows and columns;
#X obj 114 3308 #scan +;
#X text 180 3308 compute the cumulative sums of each row \,  and other similar operations;
#X obj 91 3340 #see;
#X text 180 3340 [#see]: view video output within patch and collect mouse/key info;
#X obj 102 3412 #seq_fold;
#X text 180 3412 cascade the use of an object on all elements of an incoming grid message sequence;
#X obj 120 3444 #slice;
#X text 180 3444 crop an image using a start point (top left) and end point (bottom right);
#X obj 102 3476 #solarize;
#X text 180 3476 like pingpong but on all pixel values of a grid;
#X obj 126 3508 #sort;
#X text 180 3508 sort each row of a grid;
#X obj 114 3540 #spread;
#X text 180 3540 add noise to each vector (point or pixel);
#X obj 120 3572 #store;
#X text 180 3572 store image in RAM \,  in-place picture-in-picture, and make lookups in various ways;
#X obj 126 3604 #swap;
#X text 180 3604 like [swap] for grids;
#X obj 138 3636 #t;
#X text 180 3636 like [t a a] for grids;
#X obj 72 3668 #text_to_image;
#X text 180 3668 use a fixed-width font grid to make a tiling of characters as specified by a text string;
#X obj 102 3700 #to_float;
#X text 180 3700 convert grid to sequence of floats;
#X obj 114 3732 #to_iem;
#X text 180 3732 convert grid(3) to IEMGUI colour code;
#X obj 108 3764 #to_list;
#X text 180 3764 convert grid to list;
#X obj 90 3796 #to_literal;
#X text 180 3796 convert grid to grid-literal (list with a # sign);
#X obj 114 3828 #to_pix;
#X text 180 3828 convert grid to pix (GEM);
#X obj 96 3860 #to_symbol;
#X text 180 3860 convert grid of ASCII codes to symbol;
#X obj 96 3892 #transpose;
#X text 180 3892 swap two dimensions out of any \,  in a grid;
#X obj 126 3924 #type;
#X text 180 3924 get a symbol representing the number type of a grid;
#X obj 114 3956 #unpack;
#X text 180 3956 split a grid into floats on separate outlets;
#X obj 114 3988 #window;
#X text 180 3988 a [#out window] that can be toggled to appear and disappear;
#X obj 90 4020 #yuv_to_rgb;
#X text 180 4020 convert unsigned YUV to RGB;
#X obj 132 4052 args;
#X text 180 4052 pick up the arguments of an abstraction instance \,  including nested lists and init-messages;
#X obj 126 4084 ascii;
#X text 180 4084 write integer as decimal in ascii codes;
#X obj 96 4116 ascii_to_f;
#X text 180 4116 converts a list of ascii codes to a float;
#X obj 84 4148 class_exists;
#X text 180 4148 figure out whether a class has been loaded by pd;
#X obj 114 4180 cv/#Add;
#X text 180 4180 OpenCV addition;
#X obj 114 4212 cv/#And;
#X text 180 4212 OpenCV bitwise AND;
#X obj 72 4244 cv/#ApproxPoly;
#X text 180 4244 OpenCV polygon approximator;
#X obj 60 4276 cv/#CornerHarris;
#X text 180 4276 OpenCV Harris corner-detector;
#X obj 114 4308 cv/#Div;
#X text 180 4308 OpenCV division;
#X obj 90 4340 cv/#Ellipse;
#X text 180 4340 OpenCV draw ellipse;
#X obj 30 4372 cv/#HaarDetectObjects;
#X text 180 4372 OpenCV (future use);
#X obj 96 4404 cv/#Invert;
#X text 180 4404 OpenCV invert matrix;
#X obj 84 4436 cv/#KMeans 4;
#X text 180 4436 OpenCV K-Means clusteriser;
#X obj 114 4468 cv/#Mul;
#X text 180 4468 OpenCV multiplication;
#X obj 120 4500 cv/#Or;
#X text 180 4500 OpenCV bitwise OR;
#X obj 114 4532 cv/#SVD;
#X text 180 4532 OpenCV singular value decomposition (eigendecomposition);
#X obj 114 4564 cv/#Sub;
#X text 180 4564 OpenCV subtraction;
#X obj 114 4596 cv/#Xor;
#X text 180 4596 OpenCV bitwise XOR;
#X obj 138 4628 display;
#X text 180 4628 [display]: print message or grid inside of the patch;
#X obj 66 4660 doc_link doc_accolade;
#X text 180 4660 GFDP accolade;
#X obj 96 4692 doc_link doc_add;
#X text 180 4692 add a [doc_m] in the parent of the parent canvas;
#X obj 90 4724 doc_link doc_also;
#X text 180 4724 GFDP subheader for listing related classes;
#X obj 84 4756 doc_link doc_below;
#X text 180 4756 instruct [doc_layout] to put a GFDP element below another one;
#X obj 78 4788 doc_link doc_bottom;
#X text 180 4788 find the bottom of a GFDP element;
#X obj 108 4820 doc_link doc_c;
#X text 180 4820 GFDP subheader for creation arguments documentation;
#X obj 102 4852 doc_link doc_cc;
#X text 180 4852 GFDP subsubheader for creation arguments documentation;
#X obj 90 4884 doc_link doc_demo;
#X text 180 4884 header of an example patch;
#X obj 66 4916 doc_link doc_editmode;
#X text 180 4916 automatically move [cnv] and [bng] when switching from/to edit mode;
#X obj 84 4948 doc_link doc_exist;
#X text 180 4948 check whether a certain GFDP component already exists in the help patch;
#X obj 108 4980 doc_link doc_f;
#X text 180 4980 footer of a GFDP help patch;
#X obj 108 5012 doc_link doc_h;
#X text 180 5012 header of a GFDP help patch;
#X obj 108 5044 doc_link doc_i;
#X text 180 5044 GFDP subheader for inlet documentation;
#X obj 102 5076 doc_link doc_ii;
#X text 180 5076 GFDP subsubheader for inlet documentation;
#X obj 78 5108 doc_link doc_layout;
#X text 180 5108 enforce correct layout of the abstraction containing it \,  in the parent's abstraction;
#X obj 90 5140 doc_link doc_link;
#X text 180 5140 GFDP hyperlink for opening another helpfile;
#X obj 108 5172 doc_link doc_m;
#X text 180 5172 GFDP subsubsubheader for one method or one creation argument;
#X obj 90 5204 doc_link doc_make;
#X text 180 5204 add GFDP subsubheaders in the parent of the parent canvas;
#X obj 108 5236 doc_link doc_o;
#X text 180 5236 GFDP subheader for outlet documentation;
#X obj 102 5268 doc_link doc_oo;
#X text 180 5268 GFDP subsubheader for outlet documentation;
#X obj 90 5300 doc_link doc_same;
#X text 180 5300 GFDP pseudo-comment for saying a method is same as a creation argument;
#X obj 55 5332 doremi;
#X text 180 5332 [doremi]: gui object for displaying midi notes;
#X obj 120 5421 expect;
#X text 180 5421 currently does like list.== (will do more than that in the future);
#X obj 138 5453 for;
#X text 180 5453 make sequence of float messages for each number in a range with specified stepping;
#X obj 114 5485 foreach;
#X text 180 5485 convert a list to a sequence of atom messages;
#X obj 138 5517 fps;
#X text 180 5517 measure frames per second and make statistics;
#X obj 66 5549 gf/canvas_count;
#X text 180 5549 tell total number of objects in a canvas;
#X obj 36 5581 gf/canvas_dollarzero;
#X text 180 5581 tell the \$0 of an uplevel canvas;
#X obj 42 5613 gf/canvas_edit_mode;
#X text 180 5613 tell the edit mode of a canvas;
#X obj 48 5645 gf/canvas_filename;
#X text 180 5645 tell the filename of a canvas;
#X obj 60 5677 gf/canvas_getpos;
#X text 180 5677 tell the position of a canvas in its parent canvas;
#X obj 66 5709 gf/canvas_index;
#X text 180 5709 tell the index of a canvas in its parent canvas;
#X obj 36 5741 gf/canvas_isselected;
#X text 180 5741 tell whether a canvas is selected in its parent canvas;
#X obj 48 5773 gf/canvas_loadbang;
#X text 180 5773 send loadbang to the most recently created objects of a canvas;
#X obj 60 5805 gf/canvas_setgop;
#X text 180 5805 set GOP options of a canvas;
#X obj 60 5837 gf/canvas_setpos;
#X text 180 5837 set the position of a canvas in its parent canvas;
#X obj 78 5869 gf/canvas_xid;
#X text 180 5869 tell the x11 id of a canvas \,  its window, and tell the tk id of a canvas;
#X obj 108 5901 gf/error;
#X text 180 5901 emit error message from the perspective of the current abstraction instance in its parent patch;
#X obj 84 5933 gf/find_file;
#X text 180 5933 find a file the same way that [#in] does;
#X obj 102 5965 gf/getcwd;
#X text 180 5965 tell the current working directory (as set by the "cd" shell command);
#X obj 102 5997 gf/getpid;
#X text 180 5997 tell the process id of the pd server;
#X obj 72 6029 gf/io_generate;
#X text 180 6029 for internal use by #in and #out;
#X obj 84 6061 gf/mouse_spy;
#X text 180 6061 tell mouse/key events of a single patch window in [#out window] format;
#X obj 102 6093 gf/nbxhsl;
#X text 180 6093 combined [nbx] and [hsl] boxes as used by [#camera];
#X obj 90 6125 gf/not_open;
#X text 180 6125 used by [#in] [#in~] [#out] to represent closed state;
#X obj 96 6157 gf/oneshot;
#X text 180 6157 spigot that shuts itself down after each message;
#X obj 90 6189 gf/selector;
#X text 180 6189 report the true selector of the incoming message;
#X obj 90 6221 gf/string_<;
#X text 180 6221 compare two strings;
#X obj 60 6253 gf/string_length;
#X text 180 6253 measure the length of a string (in bytes);
#X obj 54 6285 gf/string_replace;
#X text 180 6285 search and replace substrings in a symbol;
#X obj 60 6317 gf/suffix_lookup;
#X text 180 6317 find the objectclass corresponding ;
#X obj 108 6349 gridflow;
#X text 180 6349 get GridFlow's version number...;
#X obj 72 6381 hpgl_find_bbox;
#X text 180 6381 find the bounding box of a sequence of hpgl commands;
#X obj 60 6413 hpgl_font_render;
#X text 180 6413 include hpgl files from disk for drawing text;
#X obj 114 6445 hpgl_op;
#X text 180 6445 use [#] on hpgl commands;
#X obj 42 6477 hpgl_track_position;
#X text 180 6477 remember last mentioned hpgl coordinate;
#X obj 60 6509 interval_overlap;
#X text 180 6509 test whether two intervals of floats overlap;
#X obj 132 6541 inv*;
#X text 180 6541 swapped /;
#X obj 132 6573 inv+;
#X text 180 6573 swapped -;
#X obj 114 6605 list.==;
#X text 180 6605 test two lists of floats and/or symbols for equality;
#X obj 108 6637 listfind;
#X text 180 6637 find index of an element in a list;
#X obj 90 6669 listflatten;
#X text 180 6669 merge all nested lists together \,  depth-first;
#X obj 108 6701 listread;
#X text 180 6701 find element at an index in a list;
#X obj 90 6733 listreverse;
#X text 180 6733 mirror image of a list;
#X obj 102 6765 norecurse;
#X text 180 6765 simple spigot for preventing control-recursion;
#X obj 60 6797 doc_link parallel_port;
#X text 180 6797 send to and receive from a DB25 parallel port;
#X obj 108 6829 pingpong;
#X text 180 6829 turns value of a counter into a zigzag between 0 and a given value;
#X obj 66 6861 plotter_control;
#X text 180 6861 make HPGL commands;
#X obj 72 6893 plotter_parser;
#X text 180 6893 interprets ascii codes as HPGL commands and output them as messages;
#X obj 84 6925 qwerty_piano;
#X text 180 6925 imitation of [notein] using [key] and [keyup];
#X obj 126 6957 range;
#X text 180 6957 multiple moses in cascade;
#X obj 84 6989 receives \$0-;
#X text 180 6989 multiple receives with common outlet and other outlet telling the name of intended destination;
#X obj 120 7021 route2;
#X text 180 7021 route messages but keep them intact (does not remove selector);
#X obj 108 7053 seq_fold;
#X text 180 7053 cascade the use of an object on all elements of an incoming message sequence;
#X obj 126 7085 shunt;
#X text 180 7085 demultiplexer: send input to separately specified outlet;
#X obj 96 7117 systemtime;
#X text 180 7117 time spent by process in kernel mode \,  as measured by the OS;
#X obj 114 7149 tsctime;
#X text 180 7149 high-resolution real time \,  as measured by the CPU;
#X obj 102 7181 unix_time;
#X text 180 7181 real time as measured by the OS \,  including date;
#X obj 108 7213 usertime;
#X text 180 7213 time spent by process in non-kernel mode \,  as measured by the OS;
#X obj 126 7245 var.#;
#X text 180 7245 like [f] for grids;
#X text 0 7277 213 classes are listed in this index.;
