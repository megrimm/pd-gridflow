#N canvas 0 0 1024 768 10;
#X obj 0 0 doc_demo;
#X obj 0 30 cnv 15 906 22 empty empty empty 20 12 0 14 20 -66577 0;
#X text 10 30 op name;
#X text 96 30 description;
#X text 446 30 effect on pixels;
#X text 676 30 effect on coords;
#X obj 0 70 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 70 op ignore;
#X text 96 66  A ;
#X text 446 66 no effect;
#X text 676 66 no effect;
#X obj 0 96 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 96 op put;
#X text 96 92  B ;
#X text 446 92 replace by;
#X text 676 92 replace by;
#X obj 0 122 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 122 op +;
#X text 96 118  A + B ;
#X text 446 118 brightness \,  crossfade;
#X text 676 118 move \,  morph;
#X obj 0 148 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 148 op -;
#X text 96 144  A - B ;
#X text 446 144 brightness \,  motion detection;
#X text 676 144 move \,  motion detection;
#X obj 0 174 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 174 op inv+;
#X text 96 170  B - A ;
#X text 446 170 negate then contrast;
#X text 676 170 180 degree rotate then move;
#X obj 0 200 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 200 op *;
#X text 96 196  A * B ;
#X text 446 196 contrast;
#X text 676 196 zoom out;
#X obj 0 226 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 226 op *>>8;
#X text 96 222  (A * B) >> 8 ;
#X text 446 222 contrast;
#X text 676 222 zoom out;
#X obj 0 252 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 252 op /;
#X text 96 248  A / B \,  rounded towards zero ;
#X text 446 248 contrast;
#X text 676 248 zoom in;
#X obj 0 278 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 278 op div;
#X text 96 274  A / B \,  rounded downwards ;
#X text 446 274 contrast;
#X text 676 274 zoom in;
#X obj 0 304 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 304 op inv*;
#X text 96 300  B / A \,  rounded towards zero ;
#X obj 0 330 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 330 op swapdiv;
#X text 96 326  B / A \,  rounded downwards ;
#X obj 0 356 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 356 op %;
#X text 96 352  A % B \,  modulo (goes with div) ;
#X text 446 352 --;
#X text 676 352 tile;
#X obj 0 382 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 382 op swap%;
#X text 96 378  B % A \,  modulo (goes with div) ;
#X obj 0 408 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 408 op rem;
#X text 96 404  A % B \,  remainder (goes with /) ;
#X obj 0 434 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 434 op swaprem;
#X text 96 430  B % A \,  remainder (goes with /) ;
#X obj 0 460 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 460 op gcd;
#X text 96 456 greatest common divisor;
#X obj 0 486 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 486 op lcm;
#X text 96 482 least common multiple;
#X obj 0 512 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 512 op |;
#X text 96 508  A or B \,  bitwise ;
#X text 446 508 bright munchies;
#X text 676 508 bottomright munchies;
#X obj 0 538 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 538 op ^;
#X text 96 534  A xor B \,  bitwise ;
#X text 446 534 symmetric munchies (fractal checkers);
#X text 676 534 symmetric munchies (fractal checkers);
#X obj 0 564 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 564 op &;
#X text 96 560  A and B \,  bitwise ;
#X text 446 560 dark munchies;
#X text 676 560 topleft munchies;
#X obj 0 590 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 590 op <<;
#X text 96 586  A * pow(2 \, mod(B \, 32)) \,  which is left-shifting ;
#X text 446 586 like *;
#X text 676 586 like *;
#X obj 0 616 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 616 op >>;
#X text 96 612  A / pow(2 \, mod(B \, 32)) \,  which is right-shifting ;
#X text 446 612 like / \, div;
#X text 676 612 like / \, div;
#X obj 0 642 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 642 op ||;
#X text 96 638  if A is zero then B else A ;
#X obj 0 668 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 668 op &&;
#X text 96 664  if A is zero then zero else B;
#X obj 0 694 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 694 op min;
#X text 96 690  the lowest value in A \, B ;
#X text 446 690 clipping;
#X text 676 690 clipping (of individual points);
#X obj 0 720 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 720 op max;
#X text 96 716  the highest value in A \, B ;
#X text 446 716 clipping;
#X text 676 716 clipping (of individual points);
#X obj 0 746 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 746 op cmp;
#X text 96 742  -1 when A<B \,  0 when A=B \,  1 when A>B ;
#X obj 0 772 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 772 op ==;
#X text 96 768  is A equal to B ? 1=true \,  0=false ;
#X obj 0 798 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 798 op !=;
#X text 96 794  is A not equal to B ? ;
#X obj 0 824 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 824 op >;
#X text 96 820  is A greater than B ? ;
#X obj 0 850 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 850 op <=;
#X text 96 846  is A not greater than B ? ;
#X obj 0 876 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 876 op <;
#X text 96 872  is A less than B ? ;
#X obj 0 902 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 902 op >=;
#X text 96 898 is A not less than B ? ;
#X obj 0 928 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 928 op sin*;
#X text 96 924  B * sin(A) in centidegrees ;
#X text 446 924 --;
#X text 676 924 waves \,  rotations;
#X obj 0 954 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 954 op cos*;
#X text 96 950  B * cos(A) in centidegrees ;
#X text 446 950 --;
#X text 676 950 waves \,  rotations;
#X obj 0 980 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 980 op atan;
#X text 96 976  arctan(A/B) in centidegrees ;
#X text 446 976 --;
#X text 676 976 find angle to origin \;  (part of polar transform);
#X obj 0 1006 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1006 op tanh*;
#X text 96 1002  B * tanh(A) in centidegrees ;
#X text 446 1002 smooth clipping;
#X text 676 1002 smooth clipping (of individual points) \;  neural sigmoid \,  fuzzy logic;
#X obj 0 1032 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1032 op log*;
#X text 96 1028  B * log(A) (in base e) ;
#X obj 0 1058 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1058 op gamma;
#X text 96 1054  floor(pow(a/256.0 \, 256.0/b)*256.0) ;
#X text 446 1054 gamma correction;
#X obj 0 1084 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1084 op **;
#X text 96 1080  A**B \,  that is \,  A raised to power B ;
#X text 446 1080 gamma correction;
#X obj 0 1110 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1110 op abs-;
#X text 96 1106  absolute value of (A-B) ;
#X obj 0 1136 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1136 op rand;
#X text 96 1132  randomly produces a non-negative number below A ;
#X obj 0 1162 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1162 op sqrt;
#X text 96 1158  square root of A \,  rounded downwards ;
#X obj 0 1188 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1188 op sq-;
#X text 96 1184  (A-B) times (A-B) ;
#X obj 0 1214 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1214 op avg;
#X text 96 1210  (A+B)/2 ;
#X obj 0 1240 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1240 op hypot;
#X text 96 1236  distance function: square root of (A*A+B*B) ;
#X obj 0 1266 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1266 op clip+;
#X text 96 1262  like A+B but overflow causes clipping instead of wrapping around ;
#X obj 0 1292 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1292 op clip-;
#X text 96 1288  like A-B but overflow causes clipping instead of wrapping around ;
#X obj 0 1318 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1318 op erf*;
#X text 96 1314  integral of e^(-x*x) dx ... (coming soon \;  what ought to be the scaling factor?) ;
#X obj 0 1344 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1344 op weight;
#X text 96 1340  number of "1" bits in an integer;
#X obj 0 1370 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1370 op sin;
#X text 96 1366 sin(A-B) in radians \,  float only;
#X obj 0 1396 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1396 op cos;
#X text 96 1392 cos(A-B) in radians \,  float only;
#X obj 0 1422 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1422 op atan2;
#X text 96 1418 atan2(A \, B) in radians \,  float only;
#X obj 0 1448 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1448 op tanh;
#X text 96 1444 tanh(A-B) in radians \,  float only;
#X obj 0 1474 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1474 op exp;
#X text 96 1470 exp(A-B) in radians \,  float only;
#X obj 0 1500 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1500 op log;
#X text 96 1496 log(A-B) in radians \,  float only;
#X obj 0 1542 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1542 op C.*    ;
#X text 96 1538 A*B;
#X obj 0 1568 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1568 op C.*conj;
#X text 96 1564 A*conj(B);
#X obj 0 1594 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1594 op C./    ;
#X text 96 1590 A/B;
#X obj 0 1620 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1620 op C./conj;
#X text 96 1616 A/conj(B);
#X obj 0 1646 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1646 op C.sq-  ;
#X text 96 1642 (A-B)*(A-B);
#X obj 0 1672 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1672 op C.abs- ;
#X text 96 1668 abs(A-B);
#X obj 0 1698 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1698 op C.sin  ;
#X text 96 1694 sin(A-B);
#X obj 0 1724 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1724 op C.cos  ;
#X text 96 1720 cos(A-B);
#X obj 0 1750 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1750 op C.tanh ;
#X text 96 1746 tanh(A-B);
#X obj 0 1776 cnv 15 906 24 empty empty empty 20 12 0 14 -233280 -66577 0;
#X msg 10 1776 op C.exp  ;
#X text 96 1772 exp(A-B);
#X obj 0 1802 cnv 15 906 24 empty empty empty 20 12 0 14 -249792 -66577 0;
#X msg 10 1802 op C.log  ;
#X text 96 1798 log(A-B);
#X obj 10 1838 outlet;
#X connect 7 0 251 0;
#X connect 12 0 251 0;
#X connect 17 0 251 0;
#X connect 22 0 251 0;
#X connect 27 0 251 0;
#X connect 32 0 251 0;
#X connect 37 0 251 0;
#X connect 42 0 251 0;
#X connect 47 0 251 0;
#X connect 52 0 251 0;
#X connect 55 0 251 0;
#X connect 58 0 251 0;
#X connect 63 0 251 0;
#X connect 66 0 251 0;
#X connect 69 0 251 0;
#X connect 72 0 251 0;
#X connect 75 0 251 0;
#X connect 78 0 251 0;
#X connect 83 0 251 0;
#X connect 88 0 251 0;
#X connect 93 0 251 0;
#X connect 98 0 251 0;
#X connect 103 0 251 0;
#X connect 106 0 251 0;
#X connect 109 0 251 0;
#X connect 114 0 251 0;
#X connect 119 0 251 0;
#X connect 122 0 251 0;
#X connect 125 0 251 0;
#X connect 128 0 251 0;
#X connect 131 0 251 0;
#X connect 134 0 251 0;
#X connect 137 0 251 0;
#X connect 140 0 251 0;
#X connect 145 0 251 0;
#X connect 150 0 251 0;
#X connect 155 0 251 0;
#X connect 160 0 251 0;
#X connect 163 0 251 0;
#X connect 167 0 251 0;
#X connect 171 0 251 0;
#X connect 174 0 251 0;
#X connect 177 0 251 0;
#X connect 180 0 251 0;
#X connect 183 0 251 0;
#X connect 186 0 251 0;
#X connect 189 0 251 0;
#X connect 192 0 251 0;
#X connect 195 0 251 0;
#X connect 198 0 251 0;
#X connect 201 0 251 0;
#X connect 204 0 251 0;
#X connect 207 0 251 0;
#X connect 210 0 251 0;
#X connect 213 0 251 0;
#X connect 216 0 251 0;
#X connect 219 0 251 0;
#X connect 222 0 251 0;
#X connect 225 0 251 0;
#X connect 228 0 251 0;
#X connect 231 0 251 0;
#X connect 234 0 251 0;
#X connect 237 0 251 0;
#X connect 240 0 251 0;
#X connect 243 0 251 0;
#X connect 246 0 251 0;
#X connect 249 0 251 0;
#X obj 95 30 cnv 0 0 1858 empty empty empty -1 12 0 14 0 -66577 0;
#X obj 445 30 cnv 0 0 1858 empty empty empty -1 12 0 14 0 -66577 0;
#X obj 675 30 cnv 0 0 1858 empty empty empty -1 12 0 14 0 -66577 0;
#X obj 0 54 cnv 15 906 14 empty empty empty 20 12 0 14 -248881 -66577 0;
#X text 10 52 numops;
#X obj 0 1526 cnv 15 906 14 empty empty empty 20 12 0 14 -248881 -66577 0;
#X text 10 1524 vecops for complex numbers;
#X text 10 1858 
	note: a centidegree is 0.01 degree. There are 36000 centidegrees in a circle.
        Some angle operators use centidegrees \,  while some others use radians. To
        convert degrees into centidegrees \,  multiply by 100.
        To convert degrees into radians \,  divide by 57.2957 .
        Thus \,  to convert centidegrees into radians \,  divide by 5729.57 .
;
