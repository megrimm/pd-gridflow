#N canvas 106 82 735 448 10;
#X obj 278 136 cnv 15 450 15 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 8 410 cnv 15 720 30 empty empty empty 20 12 0 14 -200249 -66577
0;
#X obj 8 8 cnv 15 720 30 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 278 222 cnv 15 450 15 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 267 46 cnv 15 460 15 empty empty empty 20 12 0 14 -200249 -66577
0;
#X text 270 45 Arguments:;
#X obj 268 292 cnv 15 460 15 empty empty empty 20 12 0 14 -200249 -66577
0;
#X text 271 292 Outlets:;
#X obj 8 46 cnv 15 250 15 empty empty empty 20 12 0 14 -200249 -66577
0;
#X text 11 46 Usage:;
#X obj 8 67 cnv 15 250 30 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 8 104 cnv 15 250 300 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 266 355 cnv 15 460 15 empty empty empty 20 12 0 14 -200249 -66577
0;
#X text 269 355 More Info:;
#X text 281 136 0: (Leftmost);
#X text 281 222 1: (Rightmost);
#X text 12 8 SUMMARY:;
#X text 73 8 Transforms a grid by applying mathematical operations
in order to generate effects on a pixel by pixel basis.;
#X obj 109 76 # +;
#X floatatom 31 234 5 0 0 0 - - -;
#X obj 42 288 display;
#X obj 15 149 #color;
#X msg 15 116 255 0 0;
#X obj 15 331 #color;
#X text 281 74 One - see: inlet 1: (Rightmost);
#X obj 267 101 cnv 15 460 15 empty empty empty 20 12 0 14 -200249 -66577
0;
#X text 270 101 Inlets: (Read left to right \, inlet "0" being the
leftmost);
#X text 283 313 One - outputs the transformed grid.;
#X text 16 417 GridFlow 0.8.0;
#X obj 15 258 # +;
#X text 292 242 Integer - Accepts integers that modify the incoming
grid.;
#N canvas 15 0 912 644 numop 0;
#X text 76 366 A + B;
#X text 77 510 A * B;
#X text 73 571 rounded towards zero;
#X text 14 73 angles are in hundredth of degrees \, so a full circle
(two pi radians) is 36000 you can convert from radians to our angles
by multiplying by 18000/pi.;
#X text 13 44 for all of these \, A refers to the left inlet and B
to the value on the right.;
#X text 15 27 Consult doc/architecture.html to see all the 40 of them.
;
#X text 902 31 GridFlow 0.8.0;
#X obj 479 70 #color;
#X obj 684 72 #color;
#X msg 15 366 op +;
#X msg 15 507 op *;
#X obj 15 385 s op;
#X obj 423 155 r op;
#X obj 15 526 s op;
#X obj 15 436 s op;
#X text 77 421 A - B;
#X msg 15 417 op -;
#X obj 15 761 s op;
#X msg 15 742 op %;
#X text 69 743 A % B;
#X obj 15 575 s op;
#X msg 15 556 op /;
#X text 79 557 A / B;
#X obj 14 809 s op;
#X text 83 790 B % A;
#X text 15 14 Numeric Operators: *whoa \, there's a lot of them;
#X obj 16 482 s op;
#X msg 16 463 op inv+;
#X text 79 464 B -A;
#X obj 15 623 s op;
#X text 79 605 A / B;
#X msg 15 604 op div;
#X text 75 621 rounded downwards;
#X obj 15 668 s op;
#X msg 15 649 op inv*;
#X text 80 650 B / A;
#X text 77 665 rounded towards 0;
#X obj 15 712 s op;
#X text 76 714 rounded downwards;
#X text 101 695 B / A;
#X text 68 760 modulo (goes with div);
#X text 65 809 modulo (goes with div);
#X msg 14 790 op swap%;
#X obj 15 286 s op;
#X obj 15 334 s op;
#X msg 15 267 op ignore;
#X text 90 268 A;
#X msg 15 315 op put;
#X text 76 315 B;
#X msg 15 693 op swapdiv;
#X obj 237 286 s op;
#X msg 237 267 op rem;
#X text 315 263 A % B;
#X obj 236 338 s op;
#X text 330 319 B % A;
#X text 314 278 remainder;
#X text 314 293 (goes with /);
#X msg 236 319 op swaprem;
#X text 327 333 remainder;
#X text 326 348 (goes with /);
#X obj 236 388 s op;
#X obj 236 435 s op;
#X msg 236 369 op gcd;
#X msg 236 416 op lcm;
#X text 298 373 greatest common divisor;
#X text 298 420 least common multiple;
#X obj 235 481 s op;
#X text 299 464 A or B \, bitwise;
#X msg 235 462 op;
#X obj 235 525 s op;
#X text 299 508 A xor B \, bitwise;
#X msg 235 506 op ^;
#X obj 235 578 s op;
#X msg 235 559 op &;
#X text 300 561 A and B \, bitwise;
#X obj 235 623 s op;
#X msg 235 604 op <<;
#X text 300 606 A * (2**(B % 32);
#X text 299 621 left-shifthing;
#X obj 235 669 s op;
#X msg 235 649 op >>;
#X text 299 666 right-shifthing;
#X text 300 652 A / (2**(B % 32);
#X obj 218 463 bng 15 250 50 0 empty empty empty 0 -6 0 8 -258699 -1
-1;
#X obj 235 714 s op;
#X msg 235 695 op;
#X obj 218 695 bng 15 250 50 0 empty empty empty 0 -6 0 8 -258699 -1
-1;
#X text 299 697 if A is zero then;
#X text 300 711 B else A;
#X obj 235 758 s op;
#X text 299 741 if A is zero then;
#X text 15 110 comment;
#X msg 235 739 op &&;
#X text 300 755 zero else B;
#X obj 236 807 s op;
#X msg 236 788 op min;
#X text 300 789 the lowest value;
#X text 301 804 in A \, B;
#X obj 500 287 s op;
#X msg 500 267 op max;
#X text 556 284 in A \, B;
#X text 557 268 the highest value;
#X obj 500 333 s op;
#X msg 500 313 op cmp;
#X text 551 310 -1 when A<B;
#X text 558 338 1 when A>B;
#X text 558 324 0 when A=B;
#X obj 500 386 s op;
#X msg 500 366 op ==;
#X text 557 367 is A equal to B ?;
#X text 556 385 1 = true \, 0 = false;
#X obj 500 433 s op;
#X msg 500 413 op !=;
#X text 557 414 is A not equal to B ?;
#X obj 500 477 s op;
#X msg 500 456 op >;
#X text 557 457 is A greater than B ?;
#X obj 500 523 s op;
#X msg 500 502 op <=;
#X text 557 503 is A not greater than B ?;
#X obj 500 572 s op;
#X msg 500 551 op <;
#X text 557 552 is A less than B ?;
#X obj 500 618 s op;
#X msg 500 597 op >=;
#X text 557 598 is A not less than B ?;
#X obj 500 666 s op;
#X msg 500 645 op sin*;
#X text 559 646 B * sin(A);
#X obj 500 713 s op;
#X msg 500 691 op cos*;
#X text 560 693 B * cos(A);
#X obj 500 758 s op;
#X msg 500 736 op atan;
#X text 560 737 arctan(A/B);
#X obj 499 805 s op;
#X msg 499 783 op tan*;
#X text 559 784 tanh(A);
#X obj 738 288 s op;
#X msg 738 268 op log*;
#X text 795 269 B*log(A);
#X text 794 286 in base e;
#X obj 738 334 s op;
#X msg 738 314 op gamma;
#X text 809 314 floor(pow(a/256.0 \, 256.0/b)*256.0);
#X obj 737 385 s op;
#X msg 737 366 op **;
#X text 799 368 A**B;
#X text 799 385 A raised to power B;
#X obj 737 431 s op;
#X msg 737 412 op abs-;
#X text 799 412 absolute value of (A-B);
#X obj 737 478 s op;
#X msg 737 459 op rand;
#X text 800 473 number below A;
#X text 799 458 randomly produces a non-negative;
#X obj 737 524 s op;
#X msg 737 505 op sqrt;
#X text 799 504 square root of A;
#X text 800 519 rounded downwards;
#X obj 737 566 s op;
#X msg 737 547 op sq-;
#X text 800 546 (A-B) times (A-B);
#X obj 740 614 s op;
#X obj 723 595 bng 15 250 50 0 empty empty empty 0 -6 0 8 -258699 -1
-1;
#X msg 740 595 op clip+;
#X text 808 595 A+B but output is clipped;
#X obj 740 660 s op;
#X obj 723 641 bng 15 250 50 0 empty empty empty 0 -6 0 8 -258699 -1
-1;
#X msg 740 641 op clip-;
#X text 808 641 A-B but output is clipped;
#X obj 740 706 s op;
#X obj 740 750 s op;
#X text 808 687 (A+B)/2;
#X msg 740 687 op avg;
#X msg 740 731 op hypot;
#X text 808 731 square root of (A*A+B*B);
#X obj 740 792 s op;
#X obj 723 773 bng 15 250 50 0 empty empty empty 0 -6 0 8 -258699 -1
-1;
#X msg 740 773 op erf;
#X text 807 773 integral of e^(-x*x)dx;
#N canvas 8 30 615 351 all_operators 0;
#X obj 174 99 # -;
#X obj 522 97 # swap%;
#X obj 186 177 # abs-;
#X obj 238 177 # rand;
#X obj 342 177 # sq-;
#X obj 290 177 # sqrt;
#X obj 144 99 # +;
#X obj 492 97 # %;
#X obj 260 99 # *;
#X obj 289 99 # /;
#X obj 206 99 # inv+;
#X obj 321 99 # div;
#X obj 367 98 # inv*;
#X obj 420 98 # swapdiv;
#X obj 35 99 # ignore;
#X obj 100 100 # put;
#X obj 35 125 # rem;
#X obj 78 125 # swaprem;
#X obj 149 125 # gcd;
#X obj 191 125 # lcm;
#X obj 234 125 # |;
#X obj 234 125 # |;
#X obj 263 125 # ^;
#X obj 293 125 # &;
#X obj 322 125 # <<;
#X obj 358 125 # >>;
#X obj 394 125 # ||;
#X obj 431 125 # &&;
#X obj 467 125 # min;
#X obj 35 151 # max;
#X obj 79 151 # cmp;
#X obj 124 151 # ==;
#X obj 162 151 # !=;
#X obj 199 151 # >;
#X obj 234 151 # <=;
#X obj 274 151 # <;
#X obj 304 152 # >=;
#X obj 341 152 # sin*;
#X obj 391 152 # cos*;
#X obj 442 152 # atan;
#X obj 493 152 # tanh*;
#X obj 35 177 # log*;
#X obj 87 177 # gamma;
#X obj 148 177 # **;
#X obj 388 177 # avg;
#X obj 433 177 # hypot;
#X restore 15 174 pd all_operators;
#X text 585 31 select values below;
#X text 14 233 select an operator below;
#X text 478 51 A;
#X text 683 53 B;
#X obj 479 182 # +;
#X obj 257 196 #color;
#X obj 297 162 #reverse;
#X obj 443 215 display;
#X obj 656 197 #unpack 3;
#X floatatom 605 244 5 0 0 0 - - -;
#X obj 642 150 t a a;
#X obj 597 191 display;
#X connect 7 0 186 0;
#X connect 7 0 188 0;
#X connect 7 0 192 0;
#X connect 8 0 186 1;
#X connect 9 0 11 0;
#X connect 10 0 13 0;
#X connect 12 0 186 0;
#X connect 16 0 14 0;
#X connect 18 0 17 0;
#X connect 21 0 20 0;
#X connect 27 0 26 0;
#X connect 31 0 29 0;
#X connect 34 0 33 0;
#X connect 42 0 23 0;
#X connect 45 0 43 0;
#X connect 47 0 44 0;
#X connect 49 0 37 0;
#X connect 51 0 50 0;
#X connect 57 0 53 0;
#X connect 62 0 60 0;
#X connect 63 0 61 0;
#X connect 68 0 66 0;
#X connect 71 0 69 0;
#X connect 73 0 72 0;
#X connect 76 0 75 0;
#X connect 80 0 79 0;
#X connect 85 0 84 0;
#X connect 92 0 89 0;
#X connect 95 0 94 0;
#X connect 99 0 98 0;
#X connect 103 0 102 0;
#X connect 108 0 107 0;
#X connect 112 0 111 0;
#X connect 115 0 114 0;
#X connect 118 0 117 0;
#X connect 121 0 120 0;
#X connect 124 0 123 0;
#X connect 127 0 126 0;
#X connect 130 0 129 0;
#X connect 133 0 132 0;
#X connect 136 0 135 0;
#X connect 139 0 138 0;
#X connect 143 0 142 0;
#X connect 146 0 145 0;
#X connect 150 0 149 0;
#X connect 153 0 152 0;
#X connect 157 0 156 0;
#X connect 161 0 160 0;
#X connect 165 0 163 0;
#X connect 169 0 167 0;
#X connect 174 0 171 0;
#X connect 175 0 172 0;
#X connect 179 0 177 0;
#X connect 188 0 187 0;
#X connect 188 0 189 0;
#X connect 190 0 191 0;
#X connect 192 0 193 0;
#X connect 192 1 190 0;
#X restore 265 380 pd numop;
#X text 290 157 Grid - Accepts a grid to be modified by an operator
consistent with the right inlet value (list of operators in [pd numop]).
In this example [# +] is used.;
#X text 72 234 <-- change this value to modify the operation.;
#X text 193 154 <--modify color with sliders.;
#X connect 19 0 29 1;
#X connect 21 0 29 0;
#X connect 22 0 21 0;
#X connect 29 0 20 0;
#X connect 29 0 23 0;
