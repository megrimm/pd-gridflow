#!/bin/bash
# this script by Mathieu Bouchard, 2001.

JMAX=unknown

echo
if [ ! -f configure ]
then
	echo -e "Run me from the right directory please."
	exit 1
fi

argc=$#
while [ 0 != $# ]
do
	case $1 in
		--jmax24) JMAX=24
			echo -e "Using jMax 2.4.x"
			JMAX_INCLUDE='"fts.h"'
		;;
		--jmax25) JMAX=25
			echo -e "Using jMax 2.5.x"
			JMAX_INCLUDE='<fts/fts.h>'
		;;
		--fast)
			echo -e "Fast Mode (less error checking)"
			OPTIONS="$OPTIONS, #define HAVE_SPEED"
		;;
		--jmax-dist-dir)
			JMAXROOTDIR=$2
			shift
		;;
		*)
			echo "unknown option \`$1'"
			exit 1
		;;
	esac
	shift
done

if [ "z$JMAX" = "zunknown" ]
then
	echo -e "Please specify --jmax24 or --jmax25"
	exit 1
fi

if [ "z$JMAXROOTDIR" == "z" ]; then
	JMAXROOTDIR=`(cd ../..; echo $PWD)`
	if [ -d $JMAXROOTDIR/Makefiles ]; then
		echo "assuming --jmax-dist-dir $JMAXROOTDIR"
	else
		echo "please specify --jmax-dist-dir <pathname>"
		exit 1
	fi
fi

symlink () {
	rm $1
	ln -s $1.$JMAX $1
	echo -e "`pwd`: updating $1"
}

has-videodev () {
(
	echo '#include <stdlib.h>'
	echo '#include <linux/videodev.h>'
	echo 'int main (void) { struct video_window foo; }' 
) > /tmp/$$.c
gcc /tmp/$$.c -o /tmp/$$
}

has-x11-shared-memory () {
(
	echo '#include <X11/Xlib.h>'
	echo '#include <X11/Xutil.h>'
	echo '#include <X11/StringDefs.h>'
	echo '#include <sys/ipc.h>'
	echo '#include <sys/shm.h>'
	echo '#include <X11/extensions/XShm.h>'
	echo 'int main (void) {return 0;}'
) > /tmp/$$.c
gcc /tmp/$$.c -o /tmp/$$ -L/usr/X11R6/lib -lX11
}

# this is very "heuristic" to say the least. sorry.
has-pentium-compatible () {
(
	echo 'typedef unsigned long long uint64;'
	echo 'int main(void) { uint64 x;'
	echo '__asm__ volatile (".byte 0x0f, 0x31" : "=A" (x));'
	echo 'return 0;}'
) > /tmp/$$.c
gcc /tmp/$$.c -o /tmp/$$ -mpentium && /tmp/$$
}

FORMATS='X11 PPM Targa Grid'

echo -n "looking for videodev (video4linux input hardware): "
if has-videodev; then
	echo "yes"
	FORMATS="$FORMATS VideoDev"
else
	echo "no"
fi

echo -n "looking for x11 shared memory (acceleration): "
if has-x11-shared-memory; then
	echo "yes"
	OPTIONS="$OPTIONS
#define HAVE_X11_SHARED_MEMORY"
else
	echo "no"
fi

echo -n "looking for pentium-compatible CPU: "
if has-pentium-compatible; then
	echo "yes"
	OPTIONS="$OPTIONS, #define HAVE_PENTIUM"
	OPTIONS="$OPTIONS, #define HAVE_TSC_PROFILING"
else
	echo "no"
fi

# replace commas by linefeeds
OPTIONS=`echo "$OPTIONS" | awk 'BEGIN{RS=", ?"}{print}'`

echo
echo "our format list: $FORMATS"
echo
echo "our option list: $OPTIONS"
echo

#--------------------------------#
echo "generating symbolic links"

symlink Makefile
(cd c
	symlink Makefile
	(cd src
		symlink Makefile))

#--------------------------------#
echo "generating ./config.make"
(
	echo PNAME=gridflow
	echo JMAXROOTDIR=$JMAXROOTDIR
	echo JMAXDISTDIR=$JMAXROOTDIR
	echo 'include $(JMAXDISTDIR)/Makefiles/Makefile.$(ARCH)'
) > config.make

#--------------------------------#
echo "generating c/src/Sources"
(
	echo "SOURCES = \\"
	echo "dim.c bitpacking.c operator.c grid.c grid_basic.c grid_extra.c main.c io.c \\"
	for format in $FORMATS; do
		lc_format=`echo $format | tr A-Z a-z`
		echo "format_$lc_format.c \\"
	done
	echo ""
) > c/src/Sources

#--------------------------------#
echo "generating c/src/config.h"
(
echo "
#ifndef __CONFIG_H
#define __CONFIG_H
/* this file was auto-generated by gridflow/configure */

#ifdef STANDALONE
#include \"nofts/nofts.h\"
#else
#include $JMAX_INCLUDE
#endif

#define FORMAT_LIST(_pre1_,_pre2_) \\"
for format in $FORMATS; do
	echo "  _pre1_ _pre2_##Format$format,\\"
done
echo "_pre1_ _pre2_##FormatX11" # twice... hack.
echo
echo $OPTIONS
echo
echo "#endif"
) > c/src/config.h
