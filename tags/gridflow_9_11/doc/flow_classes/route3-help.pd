#N canvas 412 69 632 627 10;
#X msg 27 39 blah blah blah;
#X msg 32 58 foo 42;
#X msg 37 77 bar 3.14159;
#X obj 122 159 display;
#X msg 42 96 pas rapport;
#X obj 0 0 doc_h;
#X obj 3 253 doc_c n;
#X obj 3 341 doc_i 1;
#X obj 3 442 doc_o n;
#X obj 14 371 doc_ii 0;
#X obj 14 472 doc_oo nonlast;
#X obj 14 541 doc_oo last;
#X obj 14 283 doc_cc any;
#X obj 0 593 doc_f;
#X obj 97 541 doc_m olast <any>;
#X obj 97 371 doc_m i0 <any>;
#X obj 97 283 doc_m cany symbol;
#X obj 3 573 doc_also;
#X obj 85 179 display;
#X obj 48 199 display;
#X obj 11 219 display;
#X text 232 283 selectors to select for. note that [route2] does not
"normalise" any selectors \, such as "bang" including implicitly 0-argument
"list" messages and such.;
#X obj 103 573 route3;
#X obj 151 573 gf/selector;
#X obj 11 120 t a;
#X text 232 541 rejected messages;
#X text 177 29 almost like [route] \, but preserves message as-is \,
and uses the "list" selector except for bang float symbol pointer.
;
#X obj 11 140 route3 blah foo bar;
#X obj 164 192 gf/selector;
#X obj 164 211 display;
#X obj 256 189 display;
#X obj 256 170 gf/selector;
#X text 232 371 message will be checked for true selector as [gf/selector]
does \, then that selector is checked against a list of selectors and
the message is output on the appropriate outlet.;
#X obj 97 471 doc_m ononlast <any>;
#X text 232 471 accepted messages (outlets are in the same order as
the object's arguments). selector is modified according to the following
rule : apart from bang float symbol pointer \, everything else becomes
'list'. (intended to go with [unpack]).;
#X obj 229 573 unpack;
#X connect 0 0 24 0;
#X connect 1 0 24 0;
#X connect 2 0 24 0;
#X connect 4 0 24 0;
#X connect 14 1 25 0;
#X connect 15 1 32 0;
#X connect 16 1 21 0;
#X connect 17 1 22 0;
#X connect 17 1 23 0;
#X connect 17 1 35 0;
#X connect 24 0 27 0;
#X connect 27 0 20 0;
#X connect 27 1 19 0;
#X connect 27 1 28 0;
#X connect 27 2 18 0;
#X connect 27 2 31 0;
#X connect 27 3 3 0;
#X connect 28 0 29 0;
#X connect 31 0 30 0;
#X connect 33 1 34 0;
