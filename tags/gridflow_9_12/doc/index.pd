#N canvas 0 0 632 659 10;
#X obj 0 0 doc_demo;
#X obj 3 32 doc_section General Topics;
#X obj 108 64 doc_link about 1;
#X text 180 64 about GridFlow (credits \,  etc);
#X obj 108 96 doc_link intro 1;
#X text 180 96 the main goal of this library (but not the only one);
#X obj 114 128 doc_link attr 1;
#X text 180 128 attributes \,  the 'get' method \,  etc;
#X obj 102 160 doc_link canvas 1;
#X text 180 160 methods added by GridFlow to pd's canvas class accessible through \[namecanvas\]);
#X obj 114 192 doc_link grid 1;
#X text 180 192 what is a grid ?;
#X obj 108 224 doc_link image 1;
#X text 180 224 an image of pixels is just one way to use a grid;
#X obj 90 256 doc_link indexmap 1;
#X text 180 256 goes with \[#store\];
#X obj 102 288 doc_link numop1 1;
#X text 180 288 a numop1 is a transformation made on one number (usually);
#X obj 102 320 doc_link numop2 1;
#X text 180 320 a numop2 represents a way of combining two numbers (usually);
#X obj 96 352 doc_link numtype 1;
#X text 180 352 numtypes allow you to balance precision \,  range \,  headroom and efficiency ("speed");
#X obj 3 404 doc_section Object Classes;
#X obj 138 436 # +;
#X text 180 436 plain numeric operators on grids: + - * / etc;
#X obj -6 468 #apply_colormap_channelwise;
#X text 180 468 apply color correction tables separately on each channel;
#X obj 54 500 #background_model;
#X text 180 500 make mask from learning to distinguish background from foreground;
#X obj 114 532 #border;
#X text 180 532 add padding on sides of a grid;
#X obj 114 564 #camera;
#X text 180 564 control panel for opening cameras;
#X obj 126 596 #cast;
#X text 180 596 convert grid from one number type to another;
#X obj 102 628 #centroid;
#X text 180 628 find centroid (weighted average) of the coordinates of a grid;
#X obj 114 660 #change;
#X text 180 660 send grid only if different from previous grid;
#X obj 102 692 #checkers;
#X text 180 692 make image of chequered background in two tones of grey;
#X obj 126 724 #clip;
#X text 180 724 min and max;
#X obj 72 756 #cluster_avg 4;
#X text 180 756 computes several averages at once according to a table of indices;
#X obj 4 788 #color;
#X text 180 788 GUI for selecting a colour;
#X obj 102 859 #compress;
#X text 180 859 pick a set of values in a grid;
#X obj 102 891 #contrast;
#X text 180 891 adjust contrast in two different ways;
#X obj 102 923 #convolve;
#X text 180 923 compute convolution product of a grid (blur and edge-detection);
#X obj 132 955 #dim;
#X text 180 955 get the size (dimensions) of a grid;
#X obj 78 987 #downscale_by;
#X text 180 987 reduce the size of an image by a whole factor;
#X obj 96 1019 #draw_hpgl;
#X text 180 1019 plot lines given in HPGL format \,  using [#draw_polygon];
#X obj 90 1051 #draw_image;
#X text 180 1051 picture-in-picture;
#X obj 84 1083 #draw_points;
#X text 180 1083 (future use);
#X obj 78 1115 #draw_polygon;
#X text 180 1115 draw polygon in an image;
#X obj 96 1147 #draw_rect;
#X text 180 1147 draw a rectangle in an image;
#X obj 84 1179 #draw_slider;
#X text 180 1179 draw a slider in an image;
#X obj 126 1211 #expr;
#X text 180 1211 an [expr] clone that will eventually support grids too;
#X obj 54 1243 #extract_diagonal;
#X text 180 1243 extract the main diagonal from a matrix;
#X obj 126 1275 #fade;
#X text 180 1275 fade in exponential-decay fashion (linear recurrence);
#X obj 102 1307 #fade_lin;
#X text 180 1307 fade in piecewise-linear fashion;
#X obj 102 1339 #fastblur;
#X text 180 1339 speedy shortcut for rectangular blur;
#X obj 132 1371 #fft;
#X text 180 1371 compute forward or inverse one-or-two-dimensional complex FFT of a grid;
#X obj 102 1403 #finished;
#X text 180 1403 bang when grid transmission has ended;
#X obj 114 1435 #fold +;
#X text 180 1435 compute the sum of each row \,  product of each row \,  and other similar operations;
#X obj 96 1467 #for 0 4 1;
#X text 180 1467 make a grid from all numbers or coordinates in a certain range;
#X obj 102 1499 #from_pdp;
#X text 180 1499 convert pdp image/*/* to grid;
#X obj 102 1531 #from_pix;
#X text 180 1531 convert pix (GEM) to grid;
#X obj 120 1563 #from~;
#X text 180 1563 turn several signals into a sequence of multichannel grids;
#X obj 120 1595 #gamma;
#X text 180 1595 apply gamma correction;
#X obj 120 1627 #grade;
#X text 180 1627 make an index of the sorting of a grid;
#X obj 54 1659 #greyscale_to_rgb;
#X text 180 1659 convert greyscale to RGB;
#X obj 120 1691 #hello;
#X text 180 1691 make 7 colour bars;
#X obj 102 1723 #hueshift;
#X text 180 1723 apply hue shift by rotating the color wheel;
#X obj 114 1755 #import;
#X text 180 1755 convert float \,  list \,  or symbol ASCII codes \,  to a grid;
#X obj 138 1787 #in;
#X text 180 1787 open file or device for reading or download;
#X obj 120 1819 #inner;
#X text 180 1819 scalar ("dot") product \,  matrix product \,  tensor contraction \,  image channel remapping \,  etc.;
#X obj 114 1851 doc_link #in~;
#X text 180 1851 open file or device for reading or download \,  with sound (experimental);
#X obj 84 1883 doc_link #io.aalib;
#X text 180 1883 open an aalib window;
#X obj 78 1915 doc_link #io.dc1394;
#X text 180 1915 open a faiawaia "DC" camera (not DV) using a Linux-compatible OS;
#X obj 90 1947 doc_link #io.grid;
#X text 180 1947 read or write a .grid file (GridFlow storage format);
#X obj 90 1979 doc_link #io.jpeg;
#X text 180 1979 read or write a .jpeg file;
#X obj 90 2011 doc_link #io.mpeg;
#X text 180 2011 read a .mpeg video file;
#X obj 96 2043 doc_link #io.png;
#X text 180 2043 read a .png image file;
#X obj 96 2075 doc_link #io.ppm;
#X text 180 2075 read a .pbm or .pgm or .ppm image file or write a .ppm image file;
#X obj 78 2107 doc_link #io.quartz;
#X text 180 2107 open a Quartz window (OSX);
#X obj 30 2139 doc_link #io.quicktimeapple;
#X text 180 2139 read a .mov video file (OSX);
#X obj 24 2171 doc_link #io.quicktimecamera;
#X text 180 2171 open a QuickTime Sequence Grabber (Camera / Video input) device;
#X obj 48 2203 doc_link #io.quicktimehw;
#X text 180 2203 read a .mov or .avi video file (Linux);
#X obj 96 2235 doc_link #io.sdl;
#X text 180 2235 open a SDL window (Windows \, Linux \, OSX);
#X obj 66 2267 doc_link #io.videodev;
#X text 180 2267 open a V4L1 device (Linux-only interface for video cameras and video digitisers);
#X obj 96 2299 doc_link #io.x11;
#X text 180 2299 open a X11 window (Linux \, etc);
#X obj 126 2331 #join;
#X text 180 2331 join two grids together along any dimension;
#X obj 96 2363 #labelling;
#X text 180 2363 tag connected pixels with region numbers in a two-tone single-channel image;
#X obj 120 2395 #layer;
#X text 180 2395 layer two same-sized images;
#X obj 60 2427 #line_to_polygon;
#X text 180 2427 convert line (as point pair) to polygon (rotated rectangle);
#X obj 96 2459 #lop_space;
#X text 180 2459 fade in spatially (up \,  down \,  left \,  right \,  etc) by IIR filtering;
#X obj 90 2491 #make_arrow;
#X text 180 2491 make an arrow "polygon" from 2 points (for use with line mode of [#draw_polygon]);
#X obj 90 2523 #make_cross;
#X text 180 2523 make cross-shaped polygon;
#X obj 107 2555 #many tgl 3 3;
#X text 180 2555 [#many]: create and organise many identical GUI objects;
#X obj 96 2624 #many-prop;
#X text 180 2624 properties dialogue for [#many];
#X obj 114 2656 #moment;
#X text 180 2656 find 1st or 2nd order moment (weighted average or variance) of the coordinates of a grid;
#X obj 78 2688 #moment_polar;
#X text 180 2688 convert covariance matrix to the longest and shortest radius of an ellipse and a rotation angle;
#X obj 54 2720 #motion_detection;
#X text 180 2720 frame difference with some options;
#X obj 120 2752 #mouse;
#X text 180 2752 converts mouse events to reports of clicks \,  drags \,  unclicks \,  motions \,  and separate buttons and wheel;
#X obj 60 2784 #noise_gate_yuvs;
#X text 180 2784 replaces dark pixels by black pixels in signed YUV images;
#X obj 132 2816 #out;
#X text 180 2816 open file or device for writing or upload;
#X obj 108 2848 #outer +;
#X text 180 2848 apply numeric operator on all possible combinations of elements of one grid with elements of another;
#X obj 126 2880 #pack;
#X text 180 2880 combine floats on separate inlets to make a grid;
#X obj 84 2912 #perspective;
#X text 180 2912 divide each point by its depth;
#X obj 78 2944 #polygon_area;
#X text 180 2944 find area of a polygon in square pixels;
#X obj 42 2976 #polygon_comparator;
#X text 180 2976 find similarity between two polygons independently of rotation \,  by radial maps and FFT;
#X obj 48 3008 #polygon_each_edge;
#X text 180 3008 convert a polygon to a sequence of overlapping 2-sided polygons representing edges;
#X obj 66 3040 #polygon_moment;
#X text 180 3040 find average of all points inside of a polygon;
#X obj 48 3072 #polygon_perimetre;
#X text 180 3072 find perimetre of a polygon in pixels (euclidian);
#X obj 42 3104 #polygon_radial_map;
#X text 180 3104 find radius of a polygon from a given origin \,  sampled at equally spaced angles;
#X obj 96 3136 #posterize;
#X text 180 3136 quantise pixel values;
#X obj 120 3168 #print;
#X text 180 3168 print to console;
#X obj 120 3200 #ravel;
#X text 180 3200 do #redim so that a grid keeps same number of elements but just one dimension;
#X obj 114 3232 #record;
#X text 180 3232 wrapper around [#in quicktime];
#X obj 102 3264 #redim ();
#X text 180 3264 change the size of a grid by restreaming contents into a new shape;
#X obj 90 3296 #reinterval;
#X text 180 3296 change the scale of values from one interval to another;
#X obj 84 3328 #remap_image;
#X text 180 3328 apply object chain on pixel positions to make new image from chosen pixels of the input image;
#X obj 108 3360 #reverse;
#X text 180 3360 mirror image of a grid along a dimension;
#X obj 54 3392 #rgb_to_greyscale;
#X text 180 3392 convert RGB to greyscale;
#X obj 84 3424 #rgb_to_rgba;
#X text 180 3424 convert RGB to RGBA (but setting alpha to 0);
#X obj 90 3456 #rgb_to_yuv;
#X text 180 3456 convert RGB to unsigned YUV;
#X obj 84 3488 #rgba_to_rgb;
#X text 180 3488 convert RGBA to RGB;
#X obj 114 3520 #rotate;
#X text 180 3520 rotate points through two axes (or rotate pixels as points in a colorspace);
#X obj 72 3552 #rotatificator;
#X text 180 3552 make rotation matrix for any two dimensions chosen from a space of any number of dimensions;
#X obj 90 3584 #saturation;
#X text 180 3584 multiply chroma by some value;
#X obj 102 3616 #scale_by;
#X text 180 3616 reduce the size of an image by a whole factor;
#X obj 102 3648 #scale_to;
#X text 180 3648 scale an image from one size to any other size by deleting or duplicating rows and columns;
#X obj 114 3680 #scan +;
#X text 180 3680 compute the cumulative sums of each row \,  and other similar operations;
#X obj 91 3712 #see;
#X text 180 3712 [#see]: view video output within patch and collect mouse/key info;
#X obj 102 3784 #seq_fold;
#X text 180 3784 cascade the use of an object on all elements of an incoming grid message sequence;
#X obj 120 3816 #slice;
#X text 180 3816 crop an image using a start point (top left) and end point (bottom right);
#X obj 102 3848 #solarize;
#X text 180 3848 like pingpong but on all pixel values of a grid;
#X obj 126 3880 #sort;
#X text 180 3880 sort each row of a grid;
#X obj 114 3912 #spread;
#X text 180 3912 add noise to each vector (point or pixel);
#X obj 108 3944 #sprintf;
#X text 180 3944 a version of gf/sprintf that directly produces a grid;
#X obj 120 3976 #store;
#X text 180 3976 store image in RAM \,  in-place picture-in-picture \,  and make lookups in various ways;
#X obj 126 4008 #swap;
#X text 180 4008 like [swap] for grids;
#X obj 138 4040 #t;
#X text 180 4040 like [t a a] for grids;
#X obj 108 4072 #tabread;
#X text 180 4072 for doing many tabreads at once \,  from a grid to a grid;
#X obj 102 4104 #tabwrite;
#X text 180 4104 for doing many tabwrites at once \,  from two grids;
#X obj 72 4136 #text_to_image;
#X text 180 4136 use a fixed-width font grid to make a tiling of characters as specified by a text string;
#X obj 102 4168 #to_float;
#X text 180 4168 convert grid to sequence of floats;
#X obj 114 4200 #to_iem;
#X text 180 4200 convert grid(3) to IEMGUI colour code;
#X obj 108 4232 #to_list;
#X text 180 4232 convert grid to list;
#X obj 90 4264 #to_literal;
#X text 180 4264 convert grid to grid-literal (list with a # sign);
#X obj 114 4296 #to_pdp;
#X text 180 4296 convert grid to pdp image/*/*;
#X obj 114 4328 #to_pix;
#X text 180 4328 convert grid to pix (GEM);
#X obj 96 4360 #to_symbol;
#X text 180 4360 convert grid of ASCII codes to symbol;
#X obj 114 4392 doc_link #to~;
#X text 180 4392 convert grid to signal;
#X obj 96 4424 #transpose;
#X text 180 4424 swap two dimensions out of any \,  in a grid;
#X obj 126 4456 #type;
#X text 180 4456 get a symbol representing the number type of a grid;
#X obj 96 4488 #type-gui;
#X text 180 4488 [#type-gui]: a hradio or vradio for selecting a type for use by 'cast' methods;
#X obj 114 4584 #unpack;
#X text 180 4584 split a grid into floats on separate outlets;
#X obj 114 4616 #window;
#X text 180 4616 a [#out window] that can be toggled to appear and disappear;
#X obj 90 4648 #yuv_to_rgb;
#X text 180 4648 convert unsigned YUV to RGB;
#X obj 132 4680 args;
#X text 180 4680 pick up the arguments of an abstraction instance \,  including nested lists and init-messages;
#X obj 126 4712 ascii;
#X text 180 4712 write integer as decimal in ascii codes;
#X obj 96 4744 ascii_to_f;
#X text 180 4744 converts a list of ascii codes to a float;
#X obj 132 4776 attr;
#X text 180 4776 dictionary to be used for storing attributes of abstractions \,  among other things;
#X obj 84 4808 class_exists;
#X text 180 4808 figure out whether a class has been loaded by pd;
#X obj 114 4840 cv/#Add;
#X text 180 4840 OpenCV addition;
#X obj 114 4872 cv/#And;
#X text 180 4872 OpenCV bitwise AND;
#X obj 72 4904 cv/#ApproxPoly;
#X text 180 4904 OpenCV polygon approximator;
#X obj 60 4936 cv/#CornerHarris;
#X text 180 4936 OpenCV Harris corner-detector;
#X obj 114 4968 cv/#Div;
#X text 180 4968 OpenCV division;
#X obj 90 5000 cv/#Ellipse;
#X text 180 5000 OpenCV draw ellipse;
#X obj 30 5032 cv/#HaarDetectObjects;
#X text 180 5032 OpenCV (future use);
#X obj 96 5064 cv/#Invert;
#X text 180 5064 OpenCV invert matrix;
#X obj 84 5096 cv/#KMeans 4;
#X text 180 5096 OpenCV K-Means clusteriser;
#X obj 114 5128 cv/#Mul;
#X text 180 5128 OpenCV multiplication;
#X obj 120 5160 cv/#Or;
#X text 180 5160 OpenCV bitwise OR;
#X obj 114 5192 cv/#SVD;
#X text 180 5192 OpenCV singular value decomposition (eigendecomposition);
#X obj 114 5224 cv/#Sub;
#X text 180 5224 OpenCV subtraction;
#X obj 114 5256 cv/#Xor;
#X text 180 5256 OpenCV bitwise XOR;
#X obj 138 5288 display;
#X text 180 5288 [display]: print message or grid inside of the patch;
#X obj 66 5320 doc_link doc_accolade;
#X text 180 5320 GFDP accolade;
#X obj 96 5352 doc_link doc_add;
#X text 180 5352 add a [doc_m] in the parent of the parent canvas;
#X obj 90 5384 doc_link doc_also;
#X text 180 5384 GFDP subheader for listing related classes;
#X obj 84 5416 doc_link doc_below;
#X text 180 5416 instruct [doc_layout] to put a GFDP element below another one;
#X obj 78 5448 doc_link doc_bottom;
#X text 180 5448 find the bottom of a GFDP element;
#X obj 108 5480 doc_link doc_c;
#X text 180 5480 GFDP subheader for creation arguments documentation;
#X obj 102 5512 doc_link doc_cc;
#X text 180 5512 GFDP subsubheader for creation arguments documentation;
#X obj 90 5544 doc_link doc_demo;
#X text 180 5544 header of an example patch;
#X obj 66 5576 doc_link doc_editmode;
#X text 180 5576 automatically move [cnv] and [bng] when switching from/to edit mode;
#X obj 84 5608 doc_link doc_exist;
#X text 180 5608 check whether a certain GFDP component already exists in the help patch;
#X obj 108 5640 doc_link doc_f;
#X text 180 5640 footer of a GFDP help patch;
#X obj 108 5672 doc_link doc_h;
#X text 180 5672 header of a GFDP help patch;
#X obj 108 5704 doc_link doc_i;
#X text 180 5704 GFDP subheader for inlet documentation;
#X obj 72 5736 doc_link doc_iemfont;
#X text 180 5736 figure out correct font size to use with IEMGUI widgets;
#X obj 102 5768 doc_link doc_ii;
#X text 180 5768 GFDP subsubheader for inlet documentation;
#X obj 78 5800 doc_link doc_layout;
#X text 180 5800 enforce correct layout of the abstraction containing it \,  in the parent's abstraction;
#X obj 90 5832 doc_link doc_link;
#X text 180 5832 GFDP hyperlink for opening another helpfile;
#X obj 108 5864 doc_link doc_m;
#X text 180 5864 GFDP subsubsubheader for one method or one creation argument;
#X obj 90 5896 doc_link doc_make;
#X text 180 5896 add GFDP subsubheaders in the parent of the parent canvas;
#X obj 108 5928 doc_link doc_o;
#X text 180 5928 GFDP subheader for outlet documentation;
#X obj 102 5960 doc_link doc_oo;
#X text 180 5960 GFDP subsubheader for outlet documentation;
#X obj 90 5992 doc_link doc_same;
#X text 180 5992 GFDP pseudo-comment for saying a method is same as a creation argument;
#X obj 55 6024 doremi;
#X text 180 6024 [doremi]: gui object for displaying midi notes;
#X obj 120 6113 expect;
#X text 180 6113 currently does like list.== (will do more than that in the future);
#X obj 138 6145 for;
#X text 180 6145 make sequence of float messages for each number in a range with specified stepping;
#X obj 114 6177 foreach;
#X text 180 6177 convert a list to a sequence of atom messages;
#X obj 138 6209 fps;
#X text 180 6209 measure frames per second and make statistics;
#X obj 114 6241 gemdead;
#X text 180 6241 fake [gemhead] for use with [#to_pix] without having to use [gemwin];
#X obj 66 6273 gf/canvas_count;
#X text 180 6273 tell total number of objects in a canvas;
#X obj 36 6305 gf/canvas_dollarzero;
#X text 180 6305 tell the \$0 of an uplevel canvas;
#X obj 42 6337 gf/canvas_edit_mode;
#X text 180 6337 tell the edit mode of a canvas;
#X obj 48 6369 gf/canvas_filename;
#X text 180 6369 tell the filename of a canvas;
#X obj 60 6401 gf/canvas_getpos;
#X text 180 6401 tell the position of a canvas in its parent canvas;
#X obj 48 6433 gf/canvas_hehehe 0;
#X text 180 6433 resize window automatically;
#X obj 48 6465 gf/canvas_hohoho 0;
#X text 180 6465 draw dashed box;
#X obj 66 6497 gf/canvas_index;
#X text 180 6497 tell the index of a canvas in its parent canvas;
#X obj 36 6529 gf/canvas_isselected;
#X text 180 6529 tell whether a canvas is selected in its parent canvas;
#X obj 48 6561 gf/canvas_loadbang;
#X text 180 6561 send loadbang to the most recently created objects of a canvas;
#X obj 60 6593 gf/canvas_setgop;
#X text 180 6593 set GOP options of a canvas;
#X obj 60 6625 gf/canvas_setpos;
#X text 180 6625 set the position of a canvas in its parent canvas;
#X obj 78 6657 gf/canvas_xid;
#X text 180 6657 tell the x11 id of a canvas \,  its window \,  and tell the tk id of a canvas;
#X obj 78 6689 gf/class_info;
#X text 180 6689 query info from GF's external classes (not abstractions);
#X obj 108 6721 gf/error;
#X text 180 6721 emit error message from the perspective of the current abstraction instance in its parent patch;
#X obj 84 6753 gf/find_file;
#X text 180 6753 find a file the same way that [#in] does;
#X obj 102 6785 gf/getcwd;
#X text 180 6785 tell the current working directory (as set by the "cd" shell command);
#X obj 102 6817 gf/getpid;
#X text 180 6817 tell the process id of the pd server;
#X obj 126 6849 gf/gl;
#X text 180 6849 OpenGL interface as simpler alternative to many of GEM's classes;
#X obj 72 6881 gf/io_generate;
#X text 180 6881 for internal use by #in and #out;
#X obj 120 6913 gf/l2s;
#X text 180 6913 another list-to-symbol converter;
#X obj 108 6945 gf/lol 0;
#X text 180 6945 make wires dashed or invisible \,  reposition and measure height of comments \,  etc.;
#X obj 84 6977 gf/mouse_spy;
#X text 180 6977 tell mouse/key events of a single patch window in [#out window] format;
#X obj 84 7009 doc_link gf/nbxhsl;
#X text 180 7009 combined [nbx] and [hsl] boxes as used by [#camera];
#X obj 90 7041 gf/not_open;
#X text 180 7041 used by [#in] [#in~] [#out] to represent closed state;
#X obj 72 7073 gf/object_bbox;
#X text 180 7073 find bounding box of object in canvas;
#X obj 96 7105 gf/oneshot;
#X text 180 7105 spigot that shuts itself down after each message;
#X obj 66 7137 gf/propertybang;
#X text 180 7137 bang when right-click properties;
#X obj 120 7169 gf/s2l;
#X text 180 7169 another symbol-to-list converter;
#X obj 90 7201 gf/selector;
#X text 180 7201 report the true selector of the incoming message;
#X obj 96 7233 gf/sprintf;
#X text 180 7233 the most complete wrapper of sprintf;
#X obj 90 7265 gf/string_<;
#X text 180 7265 compare two strings;
#X obj 60 7297 gf/string_length;
#X text 180 7297 measure the length of a string (in bytes);
#X obj 54 7329 gf/string_replace;
#X text 180 7329 search and replace substrings in a symbol;
#X obj 60 7361 gf/suffix_lookup;
#X text 180 7361 find the objectclass corresponding ;
#X obj 96 7393 gf/sys_gui;
#X text 180 7393 send internal Tcl/Tk commands from pd server to pd client;
#X obj 66 7425 doc_link gf/tk_button;
#X text 180 7425 Tcl/Tk button available on the canvas;
#X obj 114 7457 gf/wrap;
#X text 180 7457 another wrap like pd's wrap and zexy's wrap;
#X obj 108 7489 gridflow;
#X text 180 7489 get GridFlow's version number \,  folder \,  and the name of the OS;
#X obj 72 7521 hpgl_find_bbox;
#X text 180 7521 find the bounding box of a sequence of hpgl commands;
#X obj 60 7553 hpgl_font_render;
#X text 180 7553 include hpgl files from disk for drawing text;
#X obj 102 7585 hpgl_op +;
#X text 180 7585 use [#] on hpgl commands;
#X obj 42 7617 hpgl_track_position;
#X text 180 7617 remember last mentioned hpgl coordinate;
#X obj 60 7649 interval_overlap;
#X text 180 7649 test whether two intervals of floats overlap;
#X obj 132 7681 inv*;
#X text 180 7681 swapped /;
#X obj 132 7713 inv+;
#X text 180 7713 swapped -;
#X obj 114 7745 list.==;
#X text 180 7745 test two lists of floats and/or symbols for equality;
#X obj 108 7777 listfind;
#X text 180 7777 find index of an element in a list;
#X obj 90 7809 listflatten;
#X text 180 7809 merge all nested lists together \,  depth-first;
#X obj 108 7841 listread;
#X text 180 7841 find element at an index in a list;
#X obj 90 7873 listreverse;
#X text 180 7873 mirror image of a list;
#X obj 102 7905 norecurse;
#X text 180 7905 simple spigot for preventing control-recursion;
#X obj 60 7937 doc_link parallel_port;
#X text 180 7937 send to and receive from a DB25 parallel port;
#X obj 108 7969 pingpong;
#X text 180 7969 turns value of a counter into a zigzag between 0 and a given value;
#X obj 66 8001 plotter_control;
#X text 180 8001 make HPGL commands;
#X obj 72 8033 plotter_parser;
#X text 180 8033 interprets ascii codes as HPGL commands and output them as messages;
#X obj 84 8065 qwerty_piano;
#X text 180 8065 imitation of [notein] using [key] and [keyup];
#X obj 126 8097 range;
#X text 180 8097 multiple moses in cascade;
#X obj 84 8129 receives \$0-;
#X text 180 8129 multiple receives with common outlet and other outlet telling the name of intended destination;
#X obj 120 8161 route2;
#X text 180 8161 route messages but keep them intact (does not remove selector);
#X obj 120 8193 route3;
#X text 180 8193 like route \,  but the selector is only replaced by 'list' instead of \$1;
#X obj 108 8225 seq_fold;
#X text 180 8225 cascade the use of an object on all elements of an incoming message sequence;
#X obj 114 8257 setargs;
#X text 180 8257 set the arguments of an abstraction instance;
#X obj 126 8289 shunt;
#X text 180 8289 demultiplexer: send input to separately specified outlet;
#X obj 96 8321 systemtime;
#X text 180 8321 time spent by process in kernel mode \,  as measured by the OS;
#X obj 114 8353 tsctime;
#X text 180 8353 high-resolution real time \,  as measured by the CPU;
#X obj 102 8385 unix_time;
#X text 180 8385 real time as measured by the OS \,  including date;
#X obj 108 8417 usertime;
#X text 180 8417 time spent by process in non-kernel mode \,  as measured by the OS;
#X obj 126 8449 var.#;
#X text 180 8449 like [f] for grids;
#X text 0 8481 244 classes are listed in this index.;
