/* $Id$ */

"!" is planned for 0.5

Distribution (0.5.x)
[!] prepare gridflow-images-0.5
[ ] upload on both web sites
[ ] send announcement (jmaxvideo,jmax,0xff,fm.net)
[ ] review all documentation

Installation
[!] "ARCH" moved into configure.
[!] de-jmax-ify the build process.
[ ] replace --fast by opposite --debug option
[x] add --fast switch to turn on all optimizations
[!] installable doc, installable includes
[!] introduce jMax 3.0 support
[x] phase out jMax 2.4 support
[!] backup the repository
[ ] add macos 10.x support

Documentation
[ ] indiquer comment faire un rapport à propos d'une carte v4l ou d'un
    mode x11 non-supporté
[ ] mention v4l_compat.o in docs
[!] project_policy.xml
[!] validate samples/outside
[!] specify policy for <help>, <icon>, etc.
[!] add credits
[!] split reference.*ml into: elements.*ml objects.*ml formats.*ml
[ ] add explanation of gridflow vs videodsp
[ ] things you type verbatim are all in KBD blocks
[ ] placeholders for your own values are all in I blocks
[ ] find a good XML editor
[!] document use of [route grid_end], [route grid_begin]
[!] document our own release procedures, how our CVS works
[!] document how to report bugs, basic troubleshooting
[!] document our distribution of the archives
[ ] improve protocol description
[ ] ascii conventions: [foo] vs "foo", etc.
[ ] document asymptotic cpu+memory usage
[ ] document internals
[ ] document gridflow-for-C
[ ] document gridflow-for-Ruby
[x] scan for unused/useless images
[ ] document backward compatibility issues
--- remember to keep doc/help/screenshots/samples up to date

Architecture
[!] remove references to FTS in main source code
[!] class Object
[!] class Class
[x] struct GridClass
[x] CLASS() -> GRCLASS(), fully automated
[x] automated gridinlet/gridoutlet creation
[!] make FREE() handle #delete as possible
[!] better error handling
[!] @print
[!] MMX memcpy() ?
[!] runtime configurable packet_length
[x] make Dict scalable
[ ] change the protocol completely:
	not based on messages, but rather a push/pull combination,
	add GridStream objects, allow them to be passed in other
	messages; etc... (?!?)
[x] unary ops: sq
[ ] trinary ops? eg. */ *+ ?: minmax &<< >>&
[ ] identify streams by ids given at grid_begin
    (may allow for cancelling rejected grids?)
    (add cancel option to the r/rw choice in callback of grid_begin ?)
[ ] Will I switch to C++/ObjC finally ???
[ ] make @store loopable
[ ] MMX autodetection
[ ] accounting: grids messages packets numbers bytes copybytes
[ ] more profiling?

Computation Objects
[ ] @type, @cast
[ ] @cartprod (?), @slice (@splice ?)
[ ] black option in @store (?)
[ ] @import~, @export~
[ ] @import*, @export*
[ ] see APL/J/NArray/PDL reference
[ ] @queue, as a replacement for double-@store feedback, and such. (?)
[ ] @scan
[ ] @foldr, @scanr
[ ] @inner is broken but useful; rename to @inner2; add real @inner
[ ] @polygon
[ ] @matrix_inverse, @matrix_solve
[ ] @sort ?
[ ] @transpose: dimension swapping
[ ] @reverse (on given dimension number)
[ ] bidirectional vector<->int packer/unpacker (in C using metaclass...)
	will replace @two, @three, @four.
[x] @scale_by with argument
[ ] timelines as in MM-Director

Effects
[!] improve
[ ] overlay using alpha channel
[ ] pinch
[ ] pixelize, despeckle
[ ] abyss effect
[ ] @dither
[ ] image-sur-image
[ ] n-frame delaying
[ ] Y*X*RGBA <-> Y*X packing (96 <-> 32 bits) (???)
[!] HSV<->RGB, hue change
[ ] HSV<->HSL
[ ] RGB<->YUV
[ ] blinds, ...
[ ] create templates for usage patterns
[ ] split channels, join channels
[ ] see gimp for ideas
[ ] there's a way to double (?) the speed of the cross-fade.
	try interleaving the data and using [@inner]

Input/Output
[ ] in-place editing (rw mode)
[ ] implement byte-order support in BitPacking
[ ] add Hermes support
[ ] add messages "load", "save" as open,bang,close combos.
[ ] arguments to @in,@out could be a auto-open.
[ ] Pixonix bridge
[ ] Ruby bridge
[ ] PureData bridge
[ ] Max bridge

Format
[ ] all: get rid of the "format" notion
[x] all: Format base class + inheritance
[!] all: rewinding file (or not)
[!] seq: multi-image (createable by cat, ar, tar or zip)
[!] multi: multi-file (by glob pattern, e.g.: foo*.ppm)
[!] Targa: RGBA-32 and write support
[!] JPEG: support
[!] GZ: support
[ ] PNM: P1,P2,P3,P4,P5 support
[ ] XBM
[ ] XPM
[ ] PNG (and register ourselves in libpng.org's app list)
[ ] QuickTime
[!] fork: is a new format, for e.g. multiple MPEG drivers
[!] Grid: non-blocking write
[!] Grid: non-blocking listen
[!] Videodev: allow to select tv channels (this is "freq")
[ ] Videodev: fix RGB<->BGR<->??? palette issues
[ ] Videodev: find out what channel the small cam goes on and why it isn't displaying.
[ ] Raw: a new format for reading arbitrary data.
[ ] X11: mouse input

Java/Swing
[ ] color picker
[ ] gridbox (akin to intbox) or grid edition dialog, etc.
[ ] embedded display
[ ] vector slider (n parallel sliders in one, Dim(n))
[ ] 2d slider
[ ] radial slider (angle chooser)

UnitTesting/Bugs
[ ] @out causes delayed crash when closing its associated window
[ ] distinguish "mod" and "%" properly (re: rounding)
[ ] TCP server socket busy even after kill
[ ] make better detection of libmpeg version
[ ] libmpeg fubar on SuSE

